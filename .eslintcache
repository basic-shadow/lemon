[{"/home/isla/Documents/VSCODE/lemon/src/index.js":"1","/home/isla/Documents/VSCODE/lemon/src/App.js":"2","/home/isla/Documents/VSCODE/lemon/src/components/index.js":"3","/home/isla/Documents/VSCODE/lemon/src/components/HomePage/HomePage.jsx":"4","/home/isla/Documents/VSCODE/lemon/src/components/CatalogPage/CatalogPage.jsx":"5","/home/isla/Documents/VSCODE/lemon/src/api/index.js":"6","/home/isla/Documents/VSCODE/lemon/src/components/HomePage/navBarItems.js":"7","/home/isla/Documents/VSCODE/lemon/src/components/HomePage/CatalogNavBar.jsx":"8","/home/isla/Documents/VSCODE/lemon/src/components/HomePage/MainNavBar.jsx":"9","/home/isla/Documents/VSCODE/lemon/src/components/SignPage/SignInPage.jsx":"10","/home/isla/Documents/VSCODE/lemon/src/components/SignPage/SignUpPage.jsx":"11","/home/isla/Documents/VSCODE/lemon/src/components/SignPage/FormInput.jsx":"12","/home/isla/Documents/VSCODE/lemon/src/components/Footer/Footer.jsx":"13"},{"size":146,"mtime":1607189515642,"results":"14","hashOfConfig":"15"},{"size":1398,"mtime":1607447479837,"results":"16","hashOfConfig":"15"},{"size":438,"mtime":1607447366055,"results":"17","hashOfConfig":"15"},{"size":1386,"mtime":1607447331195,"results":"18","hashOfConfig":"15"},{"size":135,"mtime":1607102180154,"results":"19","hashOfConfig":"15"},{"size":252,"mtime":1607102723945,"results":"20","hashOfConfig":"15"},{"size":1259,"mtime":1607425975135,"results":"21","hashOfConfig":"15"},{"size":1669,"mtime":1607429121530,"results":"22","hashOfConfig":"15"},{"size":13070,"mtime":1607447244066,"results":"23","hashOfConfig":"15"},{"size":2480,"mtime":1607425184463,"results":"24","hashOfConfig":"15"},{"size":2320,"mtime":1607425131303,"results":"25","hashOfConfig":"15"},{"size":693,"mtime":1607406065167,"results":"26","hashOfConfig":"15"},{"size":145,"mtime":1607447375067,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"4r9htl",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/isla/Documents/VSCODE/lemon/src/index.js",[],["64","65"],"/home/isla/Documents/VSCODE/lemon/src/App.js",["66","67"],"import React from 'react';\n\nimport {HomePage, CatalogPage, MainNavBar, CatalogNavBar, SignInPage, SignUpPage, Footer} from './components';\nimport styles from './App.module.css';\n\nimport { fetchData } from './api'\nimport { BrowserRouter as Router, Link, Switch, Route } from \"react-router-dom\";\n\nimport { gsap } from 'gsap';\n\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = [];\n        this.myRef = React.createRef();\n        \n    }\n\n    async componentDidMount() {\n        const t1 = gsap.timeline({ defaults: { ease: \"power1.out\" } });\n        t1.fromTo(this.myRef, { y: '-100%' }, { y: '0%', duration: 1.5 });\n\n    }\n\n\n    render() {\n        return (\n            <div className={styles.container} ref={el => this.myRef = el}>\n                <Router>\n                    <MainNavBar/>\n                    <CatalogNavBar />\n                    <Switch>\n                        <Route exact path=\"/\" component={HomePage} />\n                        <Route path=\"/catalog\" component={CatalogPage} />\n                        <Route path=\"/signin\" component={SignInPage} />\n                        <Route path=\"/signup\" component={SignUpPage} />\n                    </Switch>\n\n                    <Footer>\n                        \n                    </Footer>\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default App;","/home/isla/Documents/VSCODE/lemon/src/components/index.js",[],"/home/isla/Documents/VSCODE/lemon/src/components/HomePage/HomePage.jsx",["68"],"import React from \"react\";\nimport { Card, CardContent, Typography, Grid, CardActionArea } from \"@material-ui/core\";\n\nimport styles from \"./HomePage.module.css\";\nimport men from '../../images/men.jpg';\nimport women from '../../images/women.jpg';\nimport kids from '../../images/kids.jpg';\n\nconst HomePage = () => {\n    const obj = { 'Men': men, 'Women': women, 'Kids': kids };\n\n    const renderItems = () => {\n        return Object.keys(obj).map((item, index) => {\n            return (\n                <Card className={styles.card} key={index} >\n                    <CardActionArea>\n                        <CardContent>\n                            <img src={obj[item]} className={styles.menImg} />\n                            <Typography align='center' style={{\n                                fontSize: '2em', marginTop: '4%'\n                            }}>{item}</Typography>\n                            <div style={{ display: 'grid', width: '10%', background: '#fff' }}>\n                                <Typography style={{ position: 'absolute', top: '50%', left: '50%' }}>Shop</Typography>\n                            </div>\n                        </CardContent>\n                    </CardActionArea>\n                </Card >)\n        });\n    }\n\n\n    return (\n        <Grid container justify=\"center\">\n            {renderItems()}\n        </Grid>\n    );\n};\n\nexport default HomePage;\n","/home/isla/Documents/VSCODE/lemon/src/components/CatalogPage/CatalogPage.jsx",[],"/home/isla/Documents/VSCODE/lemon/src/api/index.js",["69","70","71"],"import axios from 'axios';\n\nconst url = '';\n\nconst fetchData = async() => {\n    try {\n        // const { data } = await axios.get(url);\n\n        // const getData = {\n            \n        // };\n\n        // return getData;\n\n\n    } catch(error) {\n\n    }\n}","/home/isla/Documents/VSCODE/lemon/src/components/HomePage/navBarItems.js",[],["72","73"],"/home/isla/Documents/VSCODE/lemon/src/components/HomePage/CatalogNavBar.jsx",["74","75","76","77"],"import React, { useState } from 'react';\n\nimport { catalogNavItems } from './navBarItems';\n\nimport styles from \"./HomePage.module.css\";\n\nimport { NavLink } from \"react-router-dom\";\n\nimport { BsSearch } from 'react-icons/bs';\n\nimport { Divider, FormControl, TextField } from '@material-ui/core'\n\nimport lemon from '../../images/lemon.png';\n\nconst CatalogNavBar = () => {\n    const { clicked, setClicked } = useState(false);\n\n    return (\n        <div>\n            <nav className={styles.catalogNav} style={{\n                visibility: window.location.pathname === '/signin' ? 'hidden' : window.location.pathname === '/signup' ? 'hidden' : 'visible'\n            }}>\n                <img src={lemon} className={styles.lemon} />\n                <ul className={styles.mainNavlinks} style={{ width: '50%' }}>\n                    {catalogNavItems.map((item, index) => {\n                        return (\n                            <li key={index}>\n                                <NavLink to={item.url} className={styles.catalogItems}>\n                                    {item.title}\n                                </NavLink>\n                            </li>\n                        )\n                    })}\n                </ul>\n                <FormControl className={styles.searchBar}>\n                    <TextField placeholder=\"Search\" variant=\"outlined\" />\n                    <BsSearch style={{ cursor: 'pointer' }} onClick={() => alert('isla in the building')}\n                        style={{ position: 'relative', right: '8%' }} />\n                </FormControl>\n            </nav >\n            <Divider />\n        </div >\n    )\n}\n\nexport default CatalogNavBar;","/home/isla/Documents/VSCODE/lemon/src/components/HomePage/MainNavBar.jsx",["78"],"import React, { useState, useRef, useEffect } from 'react';\nimport { mainBarItems, mainCompItems } from './navBarItems';\nimport styles from \"./HomePage.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { RiArrowDropDownLine, RiYoutubeFill } from 'react-icons/ri';\nimport { FaTelegram, FaInstagram, FaFacebookF } from 'react-icons/fa';\nimport { Button, MenuItem, Paper, Grow, ClickAwayListener, MenuList, Popper, Divider } from '@material-ui/core';\n\nimport { gsap } from 'gsap';\n\n\nconst MainNavBar = () => {\n    const [city, setCity] = useState(mainCompItems[0]);\n    const [lang, setLang] = useState(mainCompItems[1]);\n    const [curr, setCurr] = useState(mainCompItems[2]);\n    const [openCity, setOpenCity] = useState(false);\n    const [openLang, setOpenLang] = useState(false);\n    const [openCurr, setOpenCurr] = useState(false);\n    const anchorRefCity = useRef();\n    const anchorRefLang = useRef();\n    const anchorRefCurr = useRef();\n\n    let t2 = useRef(null);\n    let t3 = useRef(null);\n\n\n\n    useEffect(() => {\n        const t1 = gsap.timeline({ defaults: { ease: \"power1.out\" } });\n\n        t1.fromTo(t3, { opacity: 0 }, { opacity: 1, duration: 1, delay: 1 }, 'first');\n        t1.fromTo(t2, { x: '-150%' }, { x: '0%', duration: 2, delay: 1 }, 'first');\n    }, []);\n\n\n    const handleToggle = (event) => {\n        switch (event.currentTarget.id) {\n            case 'CityBtn':\n                console.log(\"toggled\");\n                setOpenCity((prevState) => !prevState);\n                break;\n            case 'LangBtn':\n                setOpenLang((prevState) => !prevState);\n                break;\n            case 'CurrBtn':\n                setOpenCurr((prevState) => !prevState);\n                break;\n            default:\n                console.log('nothing');\n                break;\n        }\n\n    };\n\n\n    const handleClose = (event) => {\n\n        switch (event.currentTarget.id) {\n            case 'CityBtn':\n                // if (anchorRefCity.current[0] && anchorRefCity.current[0].contains(event.target)) {\n                //     return;\n                // }\n                setOpenCity(false);\n                break;\n            case 'LangBtn':\n                setOpenLang(false);\n                break;\n            case 'CurrBtn':\n                setOpenCurr(false);\n                break;\n            default:\n                console.log('nothing');\n                break;\n        }\n    };\n    const handleOpen = (event) => {\n        switch (event.currentTarget.id) {\n            case 'CityBtn':\n                setOpenCity(true);\n                break;\n            case 'LangBtn':\n                setOpenLang(true);\n                break;\n            case 'CurrBtn':\n                setOpenCurr(true);\n                break;\n            default:\n                console.log('nothing');\n                break;\n        }\n    };\n\n    const handleClick = (event) => {\n        switch (event.currentTarget.id) {\n            case 'CityBtn':\n                console.log(\"clicked\");\n                setCity(prevState => ({\n                    ...prevState,\n                    title: event.target.textContent,\n                }));\n                setOpenCity(false);\n                break;\n            case 'LangBtn':\n                setLang(prevState => ({\n                    ...prevState,\n                    title: event.target.textContent,\n                }));\n                setOpenLang(false);\n                break;\n            case 'CurrBtn':\n                setCurr(prevState => ({\n                    ...prevState,\n                    title: event.target.textContent,\n                }));\n                setOpenCurr(false);\n                break;\n            default:\n                break;\n        }\n    }\n\n    function handleListKeyDown(event) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            switch (event.currentTarget.id) {\n                case 'CityBtn':\n                    setOpenLang(false);\n                    break;\n                case 'LangBtn':\n                    setOpenLang(false);\n                    break;\n                case 'CurrBtn':\n                    setOpenLang(false);\n                    break;\n                default:\n                    console.log('nothing');\n                    break;\n            }\n        }\n    }\n\n    return (\n        <div>\n            <nav className={styles.navBackground} ref={el => t3 = el}>\n                <div className={styles.mainNav}>\n                    <a href=\"/\" id=\"logo\" className={styles.logo} ref={el => t2 = el}>\n                        Lemon.isla\n                </a>\n                    <div style={{ display: 'flex', justifyContent: 'space-around', width: '18%' }}\n                    >\n                        {city ?\n                            <div >\n\n                                <Button\n                                    id='CityBtn'\n                                    ref={anchorRefCity}\n                                    aria-controls={openCity ? 'City' : undefined}\n                                    aria-haspopup=\"true\"\n                                    onMouseEnter={handleOpen}\n                                    onMouseLeave={handleClose}\n                                    onClick={handleToggle}\n                                    style={{ color: '#fff', fontSize: '0.8em' }}\n                                >\n                                    {city.title}\n                                    <RiArrowDropDownLine />\n                                </Button>\n                                <Popper open={openCity} anchorEl={anchorRefCity.current} role={undefined} transition disablePortal>\n                                    {({ TransitionProps, placement }) => (\n                                        <Grow\n                                            {...TransitionProps}\n                                            style={{\n                                                transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n\n                                            }}\n                                        >\n                                            <Paper id='CityBtn' onMouseOver={handleOpen} onMouseLeave={handleClose}>\n                                                <ClickAwayListener onClickAway={handleClose}>\n                                                    <MenuList autoFocusItem={openCity}\n                                                        id='City' onKeyDown={handleListKeyDown}>\n                                                        {city.dropdowns.map((dropdown, index) => {\n                                                            return (\n                                                                <MenuItem key={index} id='CityBtn' onClick={handleClick}>\n                                                                    {dropdown}\n                                                                </MenuItem>)\n                                                        })}\n                                                    </MenuList>\n                                                </ClickAwayListener>\n                                            </Paper>\n                                        </Grow>\n                                    )}\n                                </Popper>\n                            </div>\n                            : null}\n\n\n                        {\n                            lang ? <div>\n                                <Button\n                                    ref={anchorRefLang}\n                                    id='LangBtn'\n                                    aria-controls={openLang ? 'Lang' : undefined}\n                                    aria-haspopup=\"true\"\n                                    onMouseEnter={handleOpen}\n                                    onMouseLeave={handleClose}\n                                    onClick={handleToggle}\n                                    style={{ color: '#fff', fontSize: '0.8em' }}\n                                >\n                                    {lang.title}\n                                    <RiArrowDropDownLine />\n                                </Button>\n                                <Popper open={openLang} anchorEl={anchorRefLang.current} role={undefined} transition disablePortal>\n                                    {({ TransitionProps, placement }) => (\n                                        <Grow\n                                            {...TransitionProps}\n                                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                                        >\n                                            <Paper id='LangBtn' onMouseOver={handleOpen} onMouseLeave={handleClose}>\n                                                <ClickAwayListener onClickAway={handleClose}>\n                                                    <MenuList autoFocusItem={openLang} id='Lang' onKeyDown={handleListKeyDown}>\n                                                        {lang.dropdowns.map((dropdown, index) => {\n                                                            return <MenuItem key={index} id='LangBtn' onClick={handleClick} >{dropdown}</MenuItem>\n                                                        })}\n                                                    </MenuList>\n                                                </ClickAwayListener>\n                                            </Paper>\n                                        </Grow>\n                                    )}\n                                </Popper>\n                            </div> : null\n                        }\n\n                        {curr ? <div>\n                            <Button\n                                style={{ color: '#fff', fontSize: '0.8em' }}\n                                ref={anchorRefCurr}\n                                id='CurrBtn'\n                                aria-controls={openCurr ? 'Curr' : undefined}\n                                aria-haspopup=\"true\"\n                                onMouseEnter={handleOpen}\n                                onMouseLeave={handleClose}\n                                onClick={handleToggle}\n                            >\n                                {curr.title}\n                                <RiArrowDropDownLine />\n                            </Button>\n                            <Popper open={openCurr} anchorEl={anchorRefCurr.current} role={undefined} transition disablePortal>\n                                {({ TransitionProps, placement }) => (\n                                    <Grow\n                                        {...TransitionProps}\n                                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                                    >\n                                        <Paper id='CurrBtn' onMouseOver={handleOpen} onMouseLeave={handleClose}>\n                                            <ClickAwayListener onClickAway={handleClose}>\n                                                <MenuList autoFocusItem={openCurr} id='Curr' onKeyDown={handleListKeyDown}>\n                                                    {curr.dropdowns.map((dropdown, index) => {\n                                                        return <MenuItem key={index} id='CurrBtn' onClick={handleClick}> {dropdown}</MenuItem>\n                                                    })}\n                                                </MenuList>\n                                            </ClickAwayListener>\n                                        </Paper>\n                                    </Grow>\n                                )}\n                            </Popper>\n                        </div> : null}\n                    </div>\n\n\n                    < ul className={styles.mainNavlinks} style={{ position: 'relative', left: '12%' }}  >\n                        {mainBarItems.map((item, index) => {\n                            return (\n                                <li key={index}>\n                                    <NavLink to={item.url} className={styles.mainNavItems} >\n                                        {item.title}\n                                    </NavLink>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                    <Button className={styles.btn}\n                        href='/signin' color='secondary' variant=\"outlined\" size=\"small\" disableElevation>\n                        Sign In\n                </Button>\n                    <ul style={{ display: 'flex', justifyContent: 'space-around', width: '8%' }}>\n                        <FaTelegram />\n                        <FaInstagram />\n                        <FaFacebookF />\n                        <RiYoutubeFill />\n                    </ul>\n                </div>\n            </nav >\n        </div>\n    )\n}\n\nexport default MainNavBar;","/home/isla/Documents/VSCODE/lemon/src/components/SignPage/SignInPage.jsx",["79","80","81","82"],"import React, { useState } from 'react';\nimport styles from \"./SignInPage.module.css\";\nimport { Paper, Grid, Typography, Divider, Button, TextField, CssBaseline } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\n\nconst SignInPage = () => {\n    const [signin, setSignin] = useState({\n        login: \"\",\n        password: \"\",\n        error: \"\"\n    });\n\n\n    const handleSignin = (event) => {\n        event.preventDefault();\n        const valid = validate();\n        console.log(signin);\n    };\n\n    const handleChange = (event) => {\n        event.preventDefault();\n        console.log(event.target.name);\n        setSignin({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const validate = () => {\n        let error = \"\";\n\n        if (signin.login) {\n            error = \"invalid email\";\n            setSignin({\n                ['error']: error\n            });\n            return false;\n        };\n        return true;\n    }\n    console.log(signin);\n\n    return (\n        <>\n            <CssBaseline />\n            <div className={styles.signin}>\n                <Paper className={styles.paper}>\n                    <Typography variant='h4' align='center' style={{ marginTop: '10%' }}>Sign-In</Typography>\n                    <Divider />\n                    <form onSubmit={e => handleSignin(e)}\n                        className={styles.form}>\n                        <TextField label=\"Login\" name='login' onChange={(e) => handleChange(e)}>\n                            {signin.login}\n                        </TextField>\n\n                        <TextField type=\"password\" label='Password' name='password' onChange={(e) => handleChange(e)}>\n                            {signin.password}\n                        </TextField>\n\n                        <div style={{ color: 'red' }}>\n                            {signin.error}\n                        </div>\n                        <Button variant='outlined' style={{ height: '60%', marginTop: '10%' }} color='secondary'\n                            onClick={e => handleSignin(e)}\n                        >\n                            Sign In\n                        </Button>\n                    </form>\n                    <div style={{ marginBottom: '10%' }}>\n                        <Typography variant='h6' >New to This?  <a href='/signup'>SignUp</a></Typography>\n\n                    </div>\n                </Paper>\n            </div >\n        </>\n    )\n}\n\nexport default SignInPage;","/home/isla/Documents/VSCODE/lemon/src/components/SignPage/SignUpPage.jsx",["83","84","85","86","87","88"],"import React, { useState } from 'react';\nimport styles from \"./SignInPage.module.css\";\nimport { Paper, Grid, Typography, Divider, Button, TextField, CssBaseline } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\n\nconst SignUpPage = () => {\n    const [signin, setSignin] = useState({\n        email: \"\",\n        login: \"\",\n        password: \"\",\n        re_password: \"\",\n        error: \"\"\n    });\n\n\n    const handleSignin = (event) => {\n        event.preventDefault();\n        const valid = validate();\n        console.log(signin);\n    };\n\n    const handleChange = (event) => {\n        event.preventDefault();\n        console.log(event.target.name);\n        setSignin({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const validate = () => {\n        let error = \"\";\n\n        if (signin.login) {\n            error = \"invalid email\";\n            setSignin({\n                ['error']: error\n            });\n            return false;\n        };\n        return true;\n    }\n    console.log(signin);\n\n    return (\n        <>\n            <CssBaseline />\n            <div className={styles.signin}>\n\n                <Paper className={styles.paper}>\n                    <Typography variant='h4'>Create Account</Typography>\n                    <Divider />\n                    <form className={styles.form}>\n                        <TextField label=\"Email\" name=\"email\">\n\n                        </TextField>\n                        <TextField label=\"Login\" name=\"login\">\n\n                        </TextField>\n                        <TextField type=\"password\" label=\"Password\" name=\"password\" helperText=\"Passwords must be at least 6 characters\">\n\n                        </TextField>\n                        <TextField type=\"password\" label=\"Re-enter password\" name=\"re_password\">\n\n                        </TextField>\n                        <Button variant='outlined' style={{ marginTop: '20%' }}>\n                            Sign Up\n                        </Button>\n                    </form>\n                    <div style={{ marginBottom: '10%' }}>\n                        <Typography variant='h6' >Account exist?  <a href='/signin'>Sign-In</a></Typography>\n                    </div>\n                </Paper>\n            </div >\n        </>\n    )\n}\n\nexport default SignUpPage;","/home/isla/Documents/VSCODE/lemon/src/components/SignPage/FormInput.jsx",[],["89","90"],"/home/isla/Documents/VSCODE/lemon/src/components/Footer/Footer.jsx",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":6,"column":10,"nodeType":"97","messageId":"98","endLine":6,"endColumn":19},{"ruleId":"95","severity":1,"message":"99","line":7,"column":35,"nodeType":"97","messageId":"98","endLine":7,"endColumn":39},{"ruleId":"100","severity":1,"message":"101","line":18,"column":29,"nodeType":"102","endLine":18,"endColumn":78},{"ruleId":"95","severity":1,"message":"103","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":13},{"ruleId":"95","severity":1,"message":"104","line":3,"column":7,"nodeType":"97","messageId":"98","endLine":3,"endColumn":10},{"ruleId":"95","severity":1,"message":"105","line":5,"column":7,"nodeType":"97","messageId":"98","endLine":5,"endColumn":16},{"ruleId":"91","replacedBy":"106"},{"ruleId":"93","replacedBy":"107"},{"ruleId":"95","severity":1,"message":"108","line":16,"column":13,"nodeType":"97","messageId":"98","endLine":16,"endColumn":20},{"ruleId":"95","severity":1,"message":"109","line":16,"column":22,"nodeType":"97","messageId":"98","endLine":16,"endColumn":32},{"ruleId":"100","severity":1,"message":"101","line":23,"column":17,"nodeType":"102","endLine":23,"endColumn":61},{"ruleId":"110","severity":1,"message":"111","line":38,"column":25,"nodeType":"112","endLine":38,"endColumn":70},{"ruleId":"95","severity":1,"message":"113","line":7,"column":78,"nodeType":"97","messageId":"98","endLine":7,"endColumn":85},{"ruleId":"95","severity":1,"message":"114","line":3,"column":17,"nodeType":"97","messageId":"98","endLine":3,"endColumn":21},{"ruleId":"95","severity":1,"message":"99","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":14},{"ruleId":"95","severity":1,"message":"115","line":17,"column":15,"nodeType":"97","messageId":"98","endLine":17,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":35,"column":17,"nodeType":"118","messageId":"119","endLine":35,"endColumn":33,"fix":"120"},{"ruleId":"95","severity":1,"message":"114","line":3,"column":17,"nodeType":"97","messageId":"98","endLine":3,"endColumn":21},{"ruleId":"95","severity":1,"message":"99","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":14},{"ruleId":"95","severity":1,"message":"121","line":17,"column":11,"nodeType":"97","messageId":"98","endLine":17,"endColumn":23},{"ruleId":"95","severity":1,"message":"115","line":19,"column":15,"nodeType":"97","messageId":"98","endLine":19,"endColumn":20},{"ruleId":"95","severity":1,"message":"122","line":23,"column":11,"nodeType":"97","messageId":"98","endLine":23,"endColumn":23},{"ruleId":"116","severity":1,"message":"117","line":37,"column":17,"nodeType":"118","messageId":"119","endLine":37,"endColumn":33,"fix":"123"},{"ruleId":"91","replacedBy":"124"},{"ruleId":"93","replacedBy":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'fetchData' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","'url' is assigned a value but never used.","'fetchData' is assigned a value but never used.",["126"],["127"],"'clicked' is assigned a value but never used.","'setClicked' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Divider' is defined but never used.","'Grid' is defined but never used.","'valid' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['error'] found.","Property","unnecessarilyComputedProperty",{"range":"128","text":"129"},"'handleSignin' is assigned a value but never used.","'handleChange' is assigned a value but never used.",{"range":"130","text":"129"},["126"],["127"],"no-global-assign","no-unsafe-negation",[873,882],"'error'",[917,926]]