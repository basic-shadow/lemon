[{"/home/isla/Documents/VSCODE/lemon/src/index.js":"1","/home/isla/Documents/VSCODE/lemon/src/App.js":"2","/home/isla/Documents/VSCODE/lemon/src/components/index.js":"3","/home/isla/Documents/VSCODE/lemon/src/components/HomePage/HomePage.jsx":"4","/home/isla/Documents/VSCODE/lemon/src/components/CatalogPage/CatalogPage.jsx":"5","/home/isla/Documents/VSCODE/lemon/src/api/index.js":"6","/home/isla/Documents/VSCODE/lemon/src/components/HomePage/navBarItems.js":"7","/home/isla/Documents/VSCODE/lemon/src/components/HomePage/CatalogNavBar.jsx":"8","/home/isla/Documents/VSCODE/lemon/src/components/HomePage/MainNavBar.jsx":"9","/home/isla/Documents/VSCODE/lemon/src/components/SignPage/SignInPage.jsx":"10","/home/isla/Documents/VSCODE/lemon/src/components/SignPage/SignUpPage.jsx":"11","/home/isla/Documents/VSCODE/lemon/src/components/SignPage/FormInput.jsx":"12"},{"size":146,"mtime":1607189515642,"results":"13","hashOfConfig":"14"},{"size":1094,"mtime":1607411376342,"results":"15","hashOfConfig":"14"},{"size":385,"mtime":1607411444582,"results":"16","hashOfConfig":"14"},{"size":972,"mtime":1607370325816,"results":"17","hashOfConfig":"14"},{"size":135,"mtime":1607102180154,"results":"18","hashOfConfig":"14"},{"size":252,"mtime":1607102723945,"results":"19","hashOfConfig":"14"},{"size":1259,"mtime":1607364206029,"results":"20","hashOfConfig":"14"},{"size":1716,"mtime":1607408183474,"results":"21","hashOfConfig":"14"},{"size":11339,"mtime":1607407087434,"results":"22","hashOfConfig":"14"},{"size":2476,"mtime":1607412828432,"results":"23","hashOfConfig":"14"},{"size":2288,"mtime":1607412449781,"results":"24","hashOfConfig":"14"},{"size":693,"mtime":1607406065167,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"4r9htl",{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"55","usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/isla/Documents/VSCODE/lemon/src/index.js",[],["58","59"],"/home/isla/Documents/VSCODE/lemon/src/App.js",["60","61"],"import React from 'react';\n\nimport {HomePage, CatalogPage, MainNavBar, CatalogNavBar, SignInPage, SignUpPage} from './components';\nimport styles from './App.module.css';\n\nimport { fetchData } from './api'\nimport { BrowserRouter as Router, Link, Switch, Route } from \"react-router-dom\";\n\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = [];\n    }\n\n    async componentDidMount() {\n        // const data = await fetchData();\n    }\n\n\n    render() {\n        return (\n            <div className={styles.container}>\n                <Router>\n                    <MainNavBar />\n                    <CatalogNavBar />\n                    <Switch>\n                        <Route exact path=\"/\" component={HomePage} />\n                        <Route path=\"/catalog\" component={CatalogPage} />\n                        <Route path=\"/signin\" component={SignInPage} />\n                        <Route path=\"/signup\" component={SignUpPage} />\n                    </Switch>\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default App;","/home/isla/Documents/VSCODE/lemon/src/components/index.js",[],"/home/isla/Documents/VSCODE/lemon/src/components/HomePage/HomePage.jsx",["62","63","64","65","66","67"],"import React from \"react\";\n\nimport { Card, CardContent, Typography, Grid, Button, CardActionArea } from \"@material-ui/core\";\n\nimport styles from \"./HomePage.module.css\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nconst HomePage = () => {\n    const obj = ['Men', 'Women', 'Kids'];\n\n    const renderItems = () => {\n        return Object.keys(obj).map((index) => {\n            return (\n                <Card className={styles.card} key={index}>\n                    <CardActionArea>\n                        <CardContent>\n                            <Typography>{obj[index]}</Typography>\n                        </CardContent>\n                    </CardActionArea>\n                </Card >)\n        });\n    }\n\n\n\n    const navCatalog = () => {\n        return (\n            <h1>menu</h1>\n        )\n    }\n\n    return (\n        <Grid container justify=\"center\">\n            {renderItems()}\n        </Grid>\n    );\n};\n\nexport default HomePage;\n","/home/isla/Documents/VSCODE/lemon/src/components/CatalogPage/CatalogPage.jsx",[],"/home/isla/Documents/VSCODE/lemon/src/api/index.js",["68","69","70"],"import axios from 'axios';\n\nconst url = '';\n\nconst fetchData = async() => {\n    try {\n        // const { data } = await axios.get(url);\n\n        // const getData = {\n            \n        // };\n\n        // return getData;\n\n\n    } catch(error) {\n\n    }\n}","/home/isla/Documents/VSCODE/lemon/src/components/HomePage/navBarItems.js",[],["71","72"],"/home/isla/Documents/VSCODE/lemon/src/components/HomePage/CatalogNavBar.jsx",["73","74","75","76"],"import React, { useState } from 'react';\n\nimport { catalogNavItems } from './navBarItems';\n\nimport styles from \"./HomePage.module.css\";\n\nimport { NavLink } from \"react-router-dom\";\n\nimport { BsSearch } from 'react-icons/bs';\n\nimport { FormControl, TextField } from '@material-ui/core'\n\nimport lemon from '../../images/lemon.png';\n\nconst CatalogNavBar = () => {\n    const { clicked, setClicked } = useState(false);\n\n    return (\n        <div>\n            <nav className={styles.catalogNav} style={{\n                visibility: window.location.pathname === '/signin' ? 'hidden' : window.location.pathname === '/signup' ? 'hidden' : 'visible'\n            }}>\n                <img src={lemon} className={styles.lemon} />\n                <ul className={styles.mainNavlinks} style={{ width: '50%' }}>\n                    {catalogNavItems.map((item, index) => {\n                        return (\n                            <li key={index}>\n                                <NavLink to={item.url} className={styles.catalogItems}>\n                                    {item.title}\n                                </NavLink>\n                            </li>\n                        )\n                    })}\n                </ul>\n                <FormControl className={styles.searchBar}>\n                    <TextField placeholder=\"Search\" variant=\"outlined\" />\n                    <BsSearch style={{ cursor: 'pointer' }} onClick={() => alert('isla in the building')}\n                        style={{ position: 'relative', right: '8%' }} />\n                </FormControl>\n            </nav >\n            <p style={{ border: '1px', borderBottom: 'rgb(255, 255, 255)' }} />\n        </div >\n    )\n}\n\nexport default CatalogNavBar;","/home/isla/Documents/VSCODE/lemon/src/components/HomePage/MainNavBar.jsx",["77","78"],"import React, { useState, useRef, useEffect } from 'react';\n\nimport { mainBarItems, mainCompItems } from './navBarItems';\n\nimport styles from \"./HomePage.module.css\";\n\nimport { NavLink } from \"react-router-dom\";\n\nimport { RiArrowDropDownLine, RiYoutubeFill } from 'react-icons/ri';\n\nimport { FaTelegram, FaInstagram, FaFacebookF } from 'react-icons/fa';\n\nimport { Button, MenuItem, Paper, Grow, ClickAwayListener, MenuList, Popper, Divider } from '@material-ui/core';\n\nconst MainNavBar = () => {\n    const [city, setCity] = useState(mainCompItems[0]);\n    const [lang, setLang] = useState(mainCompItems[1]);\n    const [curr, setCurr] = useState(mainCompItems[2]);\n    const [openCity, setOpenCity] = useState(false);\n    const [openLang, setOpenLang] = useState(false);\n    const [openCurr, setOpenCurr] = useState(false);\n    const anchorRefCity = useRef();\n    const anchorRefLang = useRef();\n    const anchorRefCurr = useRef();\n\n\n    const handleToggle = (event) => {\n        switch (event.currentTarget.id) {\n            case 'CityBtn':\n                console.log(\"toggled\");\n                setOpenCity((prevState) => !prevState);\n                break;\n            case 'LangBtn':\n                setOpenLang((prevState) => !prevState);\n                break;\n            case 'CurrBtn':\n                setOpenCurr((prevState) => !prevState);\n                break;\n            default:\n                console.log('nothing');\n                break;\n        }\n\n    };\n\n    const handleClose = (event) => {\n\n        switch (event.currentTarget.id) {\n            case 'CityBtn':\n                // if (anchorRefCity.current[0] && anchorRefCity.current[0].contains(event.target)) {\n                //     return;\n                // }\n                setOpenCity(false);\n                break;\n            case 'LangBtn':\n                setOpenLang(false);\n                break;\n            case 'CurrBtn':\n                setOpenCurr(false);\n                break;\n            default:\n                console.log('nothing');\n                break;\n        }\n    };\n    const handleOpen = (event) => {\n        switch (event.currentTarget.id) {\n            case 'CityBtn':\n                setOpenCity(true);\n                break;\n            case 'LangBtn':\n                setOpenLang(true);\n                break;\n            case 'CurrBtn':\n                setOpenCurr(true);\n                break;\n            default:\n                console.log('nothing');\n                break;\n        }\n    };\n\n    const handleClick = (event) => {\n        switch (event.currentTarget.id) {\n            case 'CityBtn':\n                console.log(\"clicked\");\n                setCity(prevState => ({\n                    ...prevState,\n                    title: event.target.textContent,\n                }));\n                setOpenCity(false);\n                break;\n            case 'LangBtn':\n                setLang(prevState => ({\n                    ...prevState,\n                    title: event.target.textContent,\n                }));\n                setOpenLang(false);\n                break;\n            case 'CurrBtn':\n                setCurr(prevState => ({\n                    ...prevState,\n                    title: event.target.textContent,\n                }));\n                setOpenCurr(false);\n                break;\n            default:\n                break;\n        }\n    }\n\n    function handleListKeyDown(event) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            switch (event.currentTarget.id) {\n                case 'CityBtn':\n                    setOpenLang(false);\n                    break;\n                case 'LangBtn':\n                    setOpenLang(false);\n                    break;\n                case 'CurrBtn':\n                    setOpenLang(false);\n                    break;\n                default:\n                    console.log('nothing');\n                    break;\n            }\n        }\n    }\n\n    return (\n        <nav className={styles.mainNav}>\n            <a href=\"/\" className={styles.logo}>\n                Lemon.isla\n            </a>\n            <div style={{ display: 'flex', justifyContent: 'space-around', width: '22%', position: 'relative', right: '7%' }}>\n                {city ?\n                    <div >\n                        <Button\n                            id='CityBtn'\n                            ref={anchorRefCity}\n                            aria-controls={openCity ? 'City' : undefined}\n                            aria-haspopup=\"true\"\n                            onMouseEnter={handleOpen}\n                            onMouseLeave={handleClose}\n                            onClick={handleToggle}\n                            style={{ height: '20px' }}\n                        >\n                            {city.title}\n                            <RiArrowDropDownLine />\n                        </Button>\n                        <Popper open={openCity} anchorEl={anchorRefCity.current} role={undefined} transition disablePortal>\n                            {({ TransitionProps, placement }) => (\n                                <Grow\n                                    {...TransitionProps}\n                                    style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                                >\n                                    <Paper id='CityBtn' onMouseOver={handleOpen} onMouseLeave={handleClose}>\n                                        <ClickAwayListener onClickAway={handleClose}>\n                                            <MenuList autoFocusItem={openCity} id='City' onKeyDown={handleListKeyDown}>\n                                                {city.dropdowns.map((dropdown, index) => {\n                                                    return (\n                                                        <MenuItem key={index} id='CityBtn' onClick={handleClick}>\n                                                            {dropdown}\n                                                        </MenuItem>)\n                                                })}\n                                            </MenuList>\n                                        </ClickAwayListener>\n                                    </Paper>\n                                </Grow>\n                            )}\n                        </Popper>\n                    </div>\n                    : null}\n\n\n                {\n                    lang ? <div>\n                        <Button\n                            ref={anchorRefLang}\n                            id='LangBtn'\n                            aria-controls={openLang ? 'Lang' : undefined}\n                            aria-haspopup=\"true\"\n                            onMouseEnter={handleOpen}\n                            onMouseLeave={handleClose}\n                            onClick={handleToggle}\n                            style={{ height: '20px' }}\n                        >\n                            {lang.title}\n                            <RiArrowDropDownLine />\n                        </Button>\n                        <Popper open={openLang} anchorEl={anchorRefLang.current} role={undefined} transition disablePortal>\n                            {({ TransitionProps, placement }) => (\n                                <Grow\n                                    {...TransitionProps}\n                                    style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                                >\n                                    <Paper id='LangBtn' onMouseOver={handleOpen} onMouseLeave={handleClose}>\n                                        <ClickAwayListener onClickAway={handleClose}>\n                                            <MenuList autoFocusItem={openLang} id='Lang' onKeyDown={handleListKeyDown}>\n                                                {lang.dropdowns.map((dropdown, index) => {\n                                                    return <MenuItem key={index} id='LangBtn' onClick={handleClick} >{dropdown}</MenuItem>\n                                                })}\n                                            </MenuList>\n                                        </ClickAwayListener>\n                                    </Paper>\n                                </Grow>\n                            )}\n                        </Popper>\n                    </div> : null\n                }\n\n                {curr ? <div>\n                    <Button\n                        ref={anchorRefCurr}\n                        id='CurrBtn'\n                        aria-controls={openCurr ? 'Curr' : undefined}\n                        aria-haspopup=\"true\"\n                        onMouseEnter={handleOpen}\n                        onMouseLeave={handleClose}\n                        onClick={handleToggle}\n                        style={{ height: '20px' }}\n                    >\n                        {curr.title}\n                        <RiArrowDropDownLine />\n                    </Button>\n                    <Popper open={openCurr} anchorEl={anchorRefCurr.current} role={undefined} transition disablePortal>\n                        {({ TransitionProps, placement }) => (\n                            <Grow\n                                {...TransitionProps}\n                                style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                            >\n                                <Paper id='CurrBtn' onMouseOver={handleOpen} onMouseLeave={handleClose}>\n                                    <ClickAwayListener onClickAway={handleClose}>\n                                        <MenuList autoFocusItem={openCurr} id='Curr' onKeyDown={handleListKeyDown}>\n                                            {curr.dropdowns.map((dropdown, index) => {\n                                                return <MenuItem key={index} id='CurrBtn' onClick={handleClick}> {dropdown}</MenuItem>\n                                            })}\n                                        </MenuList>\n                                    </ClickAwayListener>\n                                </Paper>\n                            </Grow>\n                        )}\n                    </Popper>\n                </div> : null}\n            </div>\n\n\n            < ul className={styles.mainNavlinks} style={{ position: 'relative', left: '12%' }}  >\n                {mainBarItems.map((item, index) => {\n                    return (\n                        <li key={index}>\n                            <NavLink to={item.url} className={styles.mainBarItems} >\n                                {item.title}\n                            </NavLink>\n                        </li>\n                    )\n                })}\n            </ul>\n            <Button className={styles.btn}\n                href='/signin' color='secondary' variant=\"outlined\" size=\"small\" disableElevation>\n                Sign In\n            </Button>\n            <ul style={{ display: 'flex', position: 'relative', justifyContent: 'space-around', width: '12%', left: '3%' }}>\n                <FaTelegram />\n                <FaInstagram />\n                <FaFacebookF />\n                <RiYoutubeFill />\n            </ul>\n        </nav >\n    )\n}\n\nexport default MainNavBar;","/home/isla/Documents/VSCODE/lemon/src/components/SignPage/SignInPage.jsx",["79","80","81","82"],"/home/isla/Documents/VSCODE/lemon/src/components/SignPage/SignUpPage.jsx",["83","84","85","86","87","88"],"import React, { useState } from 'react';\nimport styles from \"./SignInPage.module.css\";\nimport { Paper, Grid, Typography, Divider, Button, TextField, CssBaseline } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\n\nconst SignUpPage = () => {\n    const [signin, setSignin] = useState({\n        email: \"\",\n        login: \"\",\n        password: \"\",\n        re_password: \"\",\n        error: \"\"\n    });\n\n\n    const handleSignin = (event) => {\n        event.preventDefault();\n        const valid = validate();\n        console.log(signin);\n    };\n\n    const handleChange = (event) => {\n        event.preventDefault();\n        console.log(event.target.name);\n        setSignin({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const validate = () => {\n        let error = \"\";\n\n        if (signin.login) {\n            error = \"invalid email\";\n            setSignin({\n                ['error']: error\n            });\n            return false;\n        };\n        return true;\n    }\n    console.log(signin);\n\n    return (\n        <>\n            <CssBaseline />\n            <div className={styles.signin}>\n\n                <Paper className={styles.paper}>\n                    <Typography variant='h4'>Create Account</Typography>\n                    <Divider />\n                    <form className={styles.form}>\n                        <TextField label=\"Email\" name=\"email\">\n\n                        </TextField>\n                        <TextField label=\"Login\" name=\"login\">\n\n                        </TextField>\n                        <TextField label=\"Password\" name=\"password\" helperText=\"Passwords must be at least 6 characters\">\n\n                        </TextField>\n                        <TextField label=\"Re-enter password\" name=\"re_password\">\n\n                        </TextField>\n                        <Button variant='outlined' style={{ marginTop: '20%' }}>\n                            Sign Up\n                        </Button>\n                    </form>\n                    <div style={{ marginBottom: '10%' }}>\n                        <Typography variant='h6' >Account exist?  <a href='/signin'>Sign-In</a></Typography>\n                    </div>\n                </Paper>\n            </div >\n        </>\n    )\n}\n\nexport default SignUpPage;","/home/isla/Documents/VSCODE/lemon/src/components/SignPage/FormInput.jsx",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":6,"column":10,"nodeType":"95","messageId":"96","endLine":6,"endColumn":19},{"ruleId":"93","severity":1,"message":"97","line":7,"column":35,"nodeType":"95","messageId":"96","endLine":7,"endColumn":39},{"ruleId":"93","severity":1,"message":"98","line":3,"column":47,"nodeType":"95","messageId":"96","endLine":3,"endColumn":53},{"ruleId":"93","severity":1,"message":"99","line":6,"column":27,"nodeType":"95","messageId":"96","endLine":6,"endColumn":33},{"ruleId":"93","severity":1,"message":"100","line":6,"column":35,"nodeType":"95","messageId":"96","endLine":6,"endColumn":40},{"ruleId":"93","severity":1,"message":"97","line":6,"column":42,"nodeType":"95","messageId":"96","endLine":6,"endColumn":46},{"ruleId":"93","severity":1,"message":"101","line":6,"column":48,"nodeType":"95","messageId":"96","endLine":6,"endColumn":54},{"ruleId":"93","severity":1,"message":"102","line":26,"column":11,"nodeType":"95","messageId":"96","endLine":26,"endColumn":21},{"ruleId":"93","severity":1,"message":"103","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":13},{"ruleId":"93","severity":1,"message":"104","line":3,"column":7,"nodeType":"95","messageId":"96","endLine":3,"endColumn":10},{"ruleId":"93","severity":1,"message":"105","line":5,"column":7,"nodeType":"95","messageId":"96","endLine":5,"endColumn":16},{"ruleId":"89","replacedBy":"106"},{"ruleId":"91","replacedBy":"107"},{"ruleId":"93","severity":1,"message":"108","line":16,"column":13,"nodeType":"95","messageId":"96","endLine":16,"endColumn":20},{"ruleId":"93","severity":1,"message":"109","line":16,"column":22,"nodeType":"95","messageId":"96","endLine":16,"endColumn":32},{"ruleId":"110","severity":1,"message":"111","line":23,"column":17,"nodeType":"112","endLine":23,"endColumn":61},{"ruleId":"113","severity":1,"message":"114","line":38,"column":25,"nodeType":"115","endLine":38,"endColumn":70},{"ruleId":"93","severity":1,"message":"116","line":1,"column":35,"nodeType":"95","messageId":"96","endLine":1,"endColumn":44},{"ruleId":"93","severity":1,"message":"117","line":13,"column":78,"nodeType":"95","messageId":"96","endLine":13,"endColumn":85},{"ruleId":"93","severity":1,"message":"118","line":3,"column":17,"nodeType":"95","messageId":"96","endLine":3,"endColumn":21},{"ruleId":"93","severity":1,"message":"97","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":14},{"ruleId":"93","severity":1,"message":"119","line":17,"column":15,"nodeType":"95","messageId":"96","endLine":17,"endColumn":20},{"ruleId":"120","severity":1,"message":"121","line":35,"column":17,"nodeType":"122","messageId":"123","endLine":35,"endColumn":33,"fix":"124"},{"ruleId":"93","severity":1,"message":"118","line":3,"column":17,"nodeType":"95","messageId":"96","endLine":3,"endColumn":21},{"ruleId":"93","severity":1,"message":"97","line":4,"column":10,"nodeType":"95","messageId":"96","endLine":4,"endColumn":14},{"ruleId":"93","severity":1,"message":"125","line":17,"column":11,"nodeType":"95","messageId":"96","endLine":17,"endColumn":23},{"ruleId":"93","severity":1,"message":"119","line":19,"column":15,"nodeType":"95","messageId":"96","endLine":19,"endColumn":20},{"ruleId":"93","severity":1,"message":"126","line":23,"column":11,"nodeType":"95","messageId":"96","endLine":23,"endColumn":23},{"ruleId":"120","severity":1,"message":"121","line":37,"column":17,"nodeType":"122","messageId":"123","endLine":37,"endColumn":33,"fix":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'fetchData' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Button' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'navCatalog' is assigned a value but never used.","'axios' is defined but never used.","'url' is assigned a value but never used.","'fetchData' is assigned a value but never used.",["128"],["129"],"'clicked' is assigned a value but never used.","'setClicked' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","'Divider' is defined but never used.","'Grid' is defined but never used.","'valid' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['error'] found.","Property","unnecessarilyComputedProperty",{"range":"130","text":"131"},"'handleSignin' is assigned a value but never used.","'handleChange' is assigned a value but never used.",{"range":"132","text":"131"},"no-global-assign","no-unsafe-negation",[873,882],"'error'",[917,926]]