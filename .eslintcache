[{"/home/isla/Documents/VSCode/ReactJS/lemon/src/index.js":"1","/home/isla/Documents/VSCode/ReactJS/lemon/src/App.js":"2","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/index.js":"3","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/CatalogPage/CatalogPage.jsx":"4","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/SignPage/SignInPage.jsx":"5","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/SignPage/SignUpPage.jsx":"6","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/Footer/Footer.jsx":"7","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/HomePage/MainNavBar.jsx":"8","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/HomePage/HomePage.jsx":"9","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/HomePage/CatalogNavBar.jsx":"10","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/HomePage/navBarItems.js":"11"},{"size":146,"mtime":1613372213207,"results":"12","hashOfConfig":"13"},{"size":1772,"mtime":1613374549654,"results":"14","hashOfConfig":"13"},{"size":438,"mtime":1613372213195,"results":"15","hashOfConfig":"13"},{"size":750,"mtime":1613374704733,"results":"16","hashOfConfig":"13"},{"size":2468,"mtime":1613374489185,"results":"17","hashOfConfig":"13"},{"size":2339,"mtime":1613374524853,"results":"18","hashOfConfig":"13"},{"size":4136,"mtime":1613372213195,"results":"19","hashOfConfig":"13"},{"size":13038,"mtime":1613372213195,"results":"20","hashOfConfig":"13"},{"size":10044,"mtime":1613374552178,"results":"21","hashOfConfig":"13"},{"size":32269,"mtime":1613374776150,"results":"22","hashOfConfig":"13"},{"size":1271,"mtime":1613374650784,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"xfu9uk",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/isla/Documents/VSCode/ReactJS/lemon/src/index.js",[],["49","50"],"/home/isla/Documents/VSCode/ReactJS/lemon/src/App.js",[],"/home/isla/Documents/VSCode/ReactJS/lemon/src/components/index.js",[],"/home/isla/Documents/VSCode/ReactJS/lemon/src/components/CatalogPage/CatalogPage.jsx",["51","52","53"],"/home/isla/Documents/VSCode/ReactJS/lemon/src/components/SignPage/SignInPage.jsx",["54","55","56","57"],"/home/isla/Documents/VSCode/ReactJS/lemon/src/components/SignPage/SignUpPage.jsx",["58","59","60","61","62","63"],"/home/isla/Documents/VSCode/ReactJS/lemon/src/components/Footer/Footer.jsx",["64","65","66","67","68","69","70","71"],"import React from 'react';\nimport { Divider, Typography } from '@material-ui/core';\nimport styles from './Footer.module.css';\nimport { RiCopyrightLine } from 'react-icons/ri';\nimport { FaAppStoreIos, FaGooglePlay } from 'react-icons/fa'\n\nconst Footer = () => {\n    return (\n        <div className={styles.footerBG}>\n            <div className={styles.grid}>\n\n                <div className={styles.paymentmethods}>\n\n                    <Typography className={styles.subheader}>Payment methods</Typography>\n                    <ul className={styles.lemonul}>\n                        <li><a> MasterCard</a></li>\n                        <li><a>VISA</a></li>\n                    </ul>\n                </div>\n                <div className={styles.contacts}>\n                    <Typography className={styles.subheader}>Contacts</Typography>\n                    <ul className={styles.lemonul}>\n                        <li className={styles.lemonli}>1-234-567-8912</li>\n                        <li className={styles.lemonli}>1-234-567-8934</li>\n                        <li className={styles.lemonli}>email@gmail.com</li>\n                        <li className={styles.lemonli}><a>Ask Bot</a></li>\n                    </ul>\n                </div>\n                <div className={styles.applications}>\n                    <Typography className={styles.subheader}>Mobile Applications</Typography>\n                    <ul className={styles.lemonul}>\n                        <li style={{ display: 'flex', }}>\n                            <FaAppStoreIos style={{\n                                transform: 'translateX(-32%)', fontSize: '1.4em', marginLeft: '1.5%',\n\n                            }} />\n                            <Typography className={styles.appshover}>App Store</Typography>\n                        </li>\n                        <li style={{ display: 'flex' }}>\n                            <FaGooglePlay style={{ transform: 'translateX(-32%)', fontSize: '1.4em', marginLeft: '1.5%' }} />\n                            <Typography className={styles.appshover}>Google Play</Typography>\n                        </li>\n                    </ul>\n                </div>\n                <div className={styles.basicinfo}>\n                    <Typography className={styles.subheader}>Basic Info</Typography>\n                    <ul className={styles.lemonul}>\n                        <li className={styles.lemonli}>Order Status</li>\n                        <li className={styles.lemonli}>Shipping Rates</li>\n                        <li className={styles.lemonli}>Returns</li>\n                        <li className={styles.lemonli}>Size Guide</li>\n                        <li className={styles.lemonli}><a>FAQs</a></li>\n                    </ul>\n                </div>\n\n                <div className={styles.lemonisla}>\n                    <h1 className={styles.logo}>\n                        Lemon.isla\n                </h1>\n                    <ul className={styles.lemonul}>\n                        <li className={styles.lemonli}><a href=\"#\">telegram</a></li>\n                        <li className={styles.lemonli}><a href=\"#\">instagram</a></li>\n                        <li className={styles.lemonli}><a href=\"#\">youtube</a></li>\n                        <li className={styles.lemonli}><a href=\"#\">facebook</a></li>\n                    </ul>\n                </div>\n            </div>\n            <Divider style={{ backgroundColor: 'black', height: '0.4vh', opacity: 0.4 }} />\n            <div className={styles.lowfooter}>\n                <RiCopyrightLine style={{\n                    color: 'white', opacity: 0.7, marginLeft: '25%',\n                    transform: 'translate(25%, -18%)'\n                }} />\n                <Typography variant='body2' style={{\n                    color: 'white', opacity: 0.7, marginLeft: '0.5em'\n                }}>\n                    2020 All rights reserved. Designed by isla</Typography>\n                <h1 style={{ color: 'white', marginLeft: 'auto', width: '20%', opacity: 0.7 }}>\n                    sponsors\n                </h1>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/HomePage/MainNavBar.jsx",["72"],"import React, { useState, useRef, useEffect } from 'react';\nimport { mainBarItems, mainCompItems } from './navBarItems';\nimport styles from \"./HomePage.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { RiArrowDropDownLine, RiYoutubeFill } from 'react-icons/ri';\nimport { FaTelegram, FaInstagram, FaFacebookF } from 'react-icons/fa';\nimport { Button, MenuItem, Paper, Grow, ClickAwayListener, MenuList, Popper, Divider } from '@material-ui/core';\nimport { gsap } from 'gsap';\n\n\nconst MainNavBar = () => {\n    const [city, setCity] = useState(mainCompItems[0]);\n    const [lang, setLang] = useState(mainCompItems[1]);\n    const [curr, setCurr] = useState(mainCompItems[2]);\n    const [openCity, setOpenCity] = useState(false);\n    const [openLang, setOpenLang] = useState(false);\n    const [openCurr, setOpenCurr] = useState(false);\n    const anchorRefCity = useRef();\n    const anchorRefLang = useRef();\n    const anchorRefCurr = useRef();\n\n    let t3 = useRef(null);\n\n\n\n    useEffect(() => {\n        const t1 = gsap.timeline({ defaults: { ease: \"power1.out\" } });\n\n        t1.fromTo(t3, { opacity: 0 }, { opacity: 1, duration: 1 });\n    }, []);\n\n\n    const handleToggle = (event) => {\n        switch (event.currentTarget.id) {\n            case 'CityBtn':\n                console.log(\"toggled\");\n                setOpenCity((prevState) => !prevState);\n                break;\n            case 'LangBtn':\n                setOpenLang((prevState) => !prevState);\n                break;\n            case 'CurrBtn':\n                setOpenCurr((prevState) => !prevState);\n                break;\n            default:\n                console.log('nothing');\n                break;\n        }\n\n    };\n\n\n    const handleClose = (event) => {\n\n        switch (event.currentTarget.id) {\n            case 'CityBtn':\n                // if (anchorRefCity.current[0] && anchorRefCity.current[0].contains(event.target)) {\n                //     return;\n                // }\n                setOpenCity(false);\n                break;\n            case 'LangBtn':\n                setOpenLang(false);\n                break;\n            case 'CurrBtn':\n                setOpenCurr(false);\n                break;\n            default:\n                console.log('nothing');\n                break;\n        }\n    };\n    const handleOpen = (event) => {\n        switch (event.currentTarget.id) {\n            case 'CityBtn':\n                setOpenCity(true);\n                break;\n            case 'LangBtn':\n                setOpenLang(true);\n                break;\n            case 'CurrBtn':\n                setOpenCurr(true);\n                break;\n            default:\n                console.log('nothing');\n                break;\n        }\n    };\n\n    const handleClick = (event) => {\n        switch (event.currentTarget.id) {\n            case 'CityBtn':\n                console.log(\"clicked\");\n                setCity(prevState => ({\n                    ...prevState,\n                    title: event.target.textContent,\n                }));\n                setOpenCity(false);\n                break;\n            case 'LangBtn':\n                setLang(prevState => ({\n                    ...prevState,\n                    title: event.target.textContent,\n                }));\n                setOpenLang(false);\n                break;\n            case 'CurrBtn':\n                setCurr(prevState => ({\n                    ...prevState,\n                    title: event.target.textContent,\n                }));\n                setOpenCurr(false);\n                break;\n            default:\n                break;\n        }\n    }\n\n    function handleListKeyDown(event) {\n        if (event.key === 'Tab') {\n            event.preventDefault();\n            switch (event.currentTarget.id) {\n                case 'CityBtn':\n                    setOpenLang(false);\n                    break;\n                case 'LangBtn':\n                    setOpenLang(false);\n                    break;\n                case 'CurrBtn':\n                    setOpenLang(false);\n                    break;\n                default:\n                    console.log('nothing');\n                    break;\n            }\n        }\n    }\n\n    return (\n        <div style={{ position: 'sticky' }}>\n            <nav className={styles.navBackground} ref={el => t3 = el}>\n                <div className={styles.mainNav}>\n                    <div>\n                        <h5>\n                            E-commerce platform\n                        </h5>\n                    </div>\n\n                    <div style={{ display: 'flex', justifyContent: 'space-around', width: '18%' }}\n                    >\n                        {city ?\n                            <div className={styles.chooseButtons}>\n\n                                <Button\n                                    id='CityBtn'\n                                    ref={anchorRefCity}\n                                    aria-controls={openCity ? 'City' : undefined}\n                                    aria-haspopup=\"true\"\n                                    onMouseEnter={handleOpen}\n                                    onMouseLeave={handleClose}\n                                    onClick={handleToggle}\n                                    className={styles.mainNavItems}\n                                >\n                                    {city.title}\n                                    <RiArrowDropDownLine />\n                                </Button>\n                                <Popper open={openCity} anchorEl={anchorRefCity.current} role={undefined} transition disablePortal>\n                                    {({ TransitionProps, placement }) => (\n                                        <Grow\n                                            {...TransitionProps}\n                                            style={{\n                                                transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n\n                                            }}\n                                        >\n                                            <Paper id='CityBtn' onMouseOver={handleOpen} onMouseLeave={handleClose}>\n                                                <ClickAwayListener onClickAway={handleClose}>\n                                                    <MenuList autoFocusItem={openCity}\n                                                        id='City' onKeyDown={handleListKeyDown}>\n                                                        {city.dropdowns.map((dropdown, index) => {\n                                                            return (\n                                                                <MenuItem key={index} id='CityBtn' onClick={handleClick}>\n                                                                    {dropdown}\n                                                                </MenuItem>)\n                                                        })}\n                                                    </MenuList>\n                                                </ClickAwayListener>\n                                            </Paper>\n                                        </Grow>\n                                    )}\n                                </Popper>\n                            </div>\n                            : null}\n\n\n                        {\n                            lang ? <div className={styles.chooseButtons}>\n                                <Button\n                                    ref={anchorRefLang}\n                                    id='LangBtn'\n                                    aria-controls={openLang ? 'Lang' : undefined}\n                                    aria-haspopup=\"true\"\n                                    onMouseEnter={handleOpen}\n                                    onMouseLeave={handleClose}\n                                    onClick={handleToggle}\n                                    className={styles.mainNavItems}\n                                >\n                                    {lang.title}\n                                    <RiArrowDropDownLine />\n                                </Button>\n                                <Popper open={openLang} anchorEl={anchorRefLang.current} role={undefined} transition disablePortal>\n                                    {({ TransitionProps, placement }) => (\n                                        <Grow\n                                            {...TransitionProps}\n                                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                                        >\n                                            <Paper id='LangBtn' onMouseOver={handleOpen} onMouseLeave={handleClose}>\n                                                <ClickAwayListener onClickAway={handleClose}>\n                                                    <MenuList autoFocusItem={openLang} id='Lang' onKeyDown={handleListKeyDown}>\n                                                        {lang.dropdowns.map((dropdown, index) => {\n                                                            return <MenuItem key={index} id='LangBtn' onClick={handleClick} >{dropdown}</MenuItem>\n                                                        })}\n                                                    </MenuList>\n                                                </ClickAwayListener>\n                                            </Paper>\n                                        </Grow>\n                                    )}\n                                </Popper>\n                            </div> : null\n                        }\n\n                        {curr ? <div className={styles.chooseButtons}>\n                            <Button\n                                className={styles.mainNavItems}\n                                ref={anchorRefCurr}\n                                id='CurrBtn'\n                                aria-controls={openCurr ? 'Curr' : undefined}\n                                aria-haspopup=\"true\"\n                                onMouseEnter={handleOpen}\n                                onMouseLeave={handleClose}\n                                onClick={handleToggle}\n                            >\n                                {curr.title}\n                                <RiArrowDropDownLine />\n                            </Button>\n                            <Popper open={openCurr} anchorEl={anchorRefCurr.current} role={undefined} transition disablePortal>\n                                {({ TransitionProps, placement }) => (\n                                    <Grow\n                                        {...TransitionProps}\n                                        style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                                    >\n                                        <Paper id='CurrBtn' onMouseOver={handleOpen} onMouseLeave={handleClose}>\n                                            <ClickAwayListener onClickAway={handleClose}>\n                                                <MenuList autoFocusItem={openCurr} id='Curr' onKeyDown={handleListKeyDown}>\n                                                    {curr.dropdowns.map((dropdown, index) => {\n                                                        return <MenuItem key={index} id='CurrBtn' onClick={handleClick}> {dropdown}</MenuItem>\n                                                    })}\n                                                </MenuList>\n                                            </ClickAwayListener>\n                                        </Paper>\n                                    </Grow>\n                                )}\n                            </Popper>\n                        </div> : null}\n                    </div>\n\n\n                    < ul className={styles.mainNavlinks} style={{ position: 'relative', left: '12%' }}  >\n                        {mainBarItems.map((item, index) => {\n                            return (\n                                <li key={index}>\n                                    <NavLink to={item.url} className={styles.mainNavItems} >\n                                        {item.title}\n                                    </NavLink>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                    <Button className={styles.btn}\n                        href='/signin' color='secondary' variant=\"outlined\" size=\"small\" disableElevation>\n                        Sign In\n                </Button>\n                    <ul className={styles.navrefs}>\n                        <li><FaTelegram /></li>\n                        <li><FaInstagram /></li>\n                        <li><FaFacebookF /></li>\n                        <li><RiYoutubeFill /></li>\n                    </ul>\n                </div>\n            </nav >\n        </div >\n    )\n}\n\nexport default MainNavBar;","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/HomePage/HomePage.jsx",["73","74","75","76","77","78","79","80","81","82","83","84"],"/home/isla/Documents/VSCode/ReactJS/lemon/src/components/HomePage/CatalogNavBar.jsx",["85","86","87"],"/home/isla/Documents/VSCode/ReactJS/lemon/src/components/HomePage/navBarItems.js",[],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":17,"column":17,"nodeType":"94","endLine":17,"endColumn":20},{"ruleId":"92","severity":1,"message":"93","line":18,"column":17,"nodeType":"94","endLine":18,"endColumn":20},{"ruleId":"92","severity":1,"message":"93","line":19,"column":17,"nodeType":"94","endLine":19,"endColumn":20},{"ruleId":"95","severity":1,"message":"96","line":3,"column":17,"nodeType":"97","messageId":"98","endLine":3,"endColumn":21},{"ruleId":"95","severity":1,"message":"99","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":14},{"ruleId":"95","severity":1,"message":"100","line":17,"column":15,"nodeType":"97","messageId":"98","endLine":17,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":35,"column":17,"nodeType":"103","messageId":"104","endLine":35,"endColumn":33,"fix":"105"},{"ruleId":"95","severity":1,"message":"96","line":3,"column":17,"nodeType":"97","messageId":"98","endLine":3,"endColumn":21},{"ruleId":"95","severity":1,"message":"99","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":14},{"ruleId":"95","severity":1,"message":"106","line":17,"column":11,"nodeType":"97","messageId":"98","endLine":17,"endColumn":23},{"ruleId":"95","severity":1,"message":"100","line":19,"column":15,"nodeType":"97","messageId":"98","endLine":19,"endColumn":20},{"ruleId":"95","severity":1,"message":"107","line":23,"column":11,"nodeType":"97","messageId":"98","endLine":23,"endColumn":23},{"ruleId":"101","severity":1,"message":"102","line":37,"column":17,"nodeType":"103","messageId":"104","endLine":37,"endColumn":33,"fix":"108"},{"ruleId":"92","severity":1,"message":"93","line":16,"column":29,"nodeType":"94","endLine":16,"endColumn":32},{"ruleId":"92","severity":1,"message":"93","line":17,"column":29,"nodeType":"94","endLine":17,"endColumn":32},{"ruleId":"92","severity":1,"message":"93","line":26,"column":56,"nodeType":"94","endLine":26,"endColumn":59},{"ruleId":"92","severity":1,"message":"93","line":52,"column":56,"nodeType":"94","endLine":52,"endColumn":59},{"ruleId":"92","severity":1,"message":"109","line":61,"column":56,"nodeType":"94","endLine":61,"endColumn":68},{"ruleId":"92","severity":1,"message":"109","line":62,"column":56,"nodeType":"94","endLine":62,"endColumn":68},{"ruleId":"92","severity":1,"message":"109","line":63,"column":56,"nodeType":"94","endLine":63,"endColumn":68},{"ruleId":"92","severity":1,"message":"109","line":64,"column":56,"nodeType":"94","endLine":64,"endColumn":68},{"ruleId":"95","severity":1,"message":"110","line":7,"column":78,"nodeType":"97","messageId":"98","endLine":7,"endColumn":85},{"ruleId":"95","severity":1,"message":"111","line":9,"column":40,"nodeType":"97","messageId":"98","endLine":9,"endColumn":50},{"ruleId":"95","severity":1,"message":"112","line":14,"column":8,"nodeType":"97","messageId":"98","endLine":14,"endColumn":13},{"ruleId":"113","severity":1,"message":"114","line":72,"column":29,"nodeType":"94","endLine":72,"endColumn":52},{"ruleId":"113","severity":1,"message":"114","line":105,"column":41,"nodeType":"94","endLine":105,"endColumn":59},{"ruleId":"113","severity":1,"message":"114","line":109,"column":41,"nodeType":"94","endLine":109,"endColumn":62},{"ruleId":"113","severity":1,"message":"114","line":113,"column":41,"nodeType":"94","endLine":113,"endColumn":60},{"ruleId":"113","severity":1,"message":"114","line":123,"column":41,"nodeType":"94","endLine":123,"endColumn":60},{"ruleId":"113","severity":1,"message":"114","line":127,"column":41,"nodeType":"94","endLine":127,"endColumn":62},{"ruleId":"113","severity":1,"message":"114","line":131,"column":41,"nodeType":"94","endLine":131,"endColumn":60},{"ruleId":"113","severity":1,"message":"114","line":150,"column":29,"nodeType":"94","endLine":150,"endColumn":56},{"ruleId":"113","severity":1,"message":"114","line":161,"column":29,"nodeType":"94","endLine":161,"endColumn":56},{"ruleId":"113","severity":1,"message":"114","line":172,"column":29,"nodeType":"94","endLine":172,"endColumn":56},{"ruleId":"95","severity":1,"message":"115","line":15,"column":13,"nodeType":"97","messageId":"98","endLine":15,"endColumn":20},{"ruleId":"95","severity":1,"message":"116","line":15,"column":22,"nodeType":"97","messageId":"98","endLine":15,"endColumn":32},{"ruleId":"117","severity":1,"message":"118","line":76,"column":25,"nodeType":"119","endLine":76,"endColumn":70},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'valid' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['error'] found.","Property","unnecessarilyComputedProperty",{"range":"122","text":"123"},"'handleSignin' is assigned a value but never used.","'handleChange' is assigned a value but never used.",{"range":"124","text":"123"},"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Divider' is defined but never used.","'GrWifiNone' is defined but never used.","'card1' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'clicked' is assigned a value but never used.","'setClicked' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",[873,882],"'error'",[917,926]]