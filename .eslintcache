[{"/home/isla/Documents/VSCode/ReactJS/lemon/src/index.js":"1","/home/isla/Documents/VSCode/ReactJS/lemon/src/App.js":"2","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/index.js":"3","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/CatalogPage/CatalogPage.jsx":"4","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/SignPage/SignInPage.jsx":"5","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/SignPage/SignUpPage.jsx":"6","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/Footer/Footer.jsx":"7","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/HomePage/MainNavBar.jsx":"8","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/HomePage/HomePage.jsx":"9","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/HomePage/CatalogNavBar.jsx":"10","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/HomePage/navBarItems.js":"11"},{"size":146,"mtime":1613372213207,"results":"12","hashOfConfig":"13"},{"size":1772,"mtime":1613374549654,"results":"14","hashOfConfig":"13"},{"size":438,"mtime":1613372213195,"results":"15","hashOfConfig":"13"},{"size":5519,"mtime":1613378815006,"results":"16","hashOfConfig":"13"},{"size":2468,"mtime":1613374489185,"results":"17","hashOfConfig":"13"},{"size":2339,"mtime":1613374524853,"results":"18","hashOfConfig":"13"},{"size":4136,"mtime":1613372213195,"results":"19","hashOfConfig":"13"},{"size":13028,"mtime":1613378712109,"results":"20","hashOfConfig":"13"},{"size":10112,"mtime":1613377559109,"results":"21","hashOfConfig":"13"},{"size":32269,"mtime":1613374845064,"results":"22","hashOfConfig":"13"},{"size":1271,"mtime":1613374650784,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"xfu9uk",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/home/isla/Documents/VSCode/ReactJS/lemon/src/index.js",[],["53","54"],"/home/isla/Documents/VSCode/ReactJS/lemon/src/App.js",[],"/home/isla/Documents/VSCode/ReactJS/lemon/src/components/index.js",[],"/home/isla/Documents/VSCode/ReactJS/lemon/src/components/CatalogPage/CatalogPage.jsx",["55","56","57","58","59"],"/home/isla/Documents/VSCode/ReactJS/lemon/src/components/SignPage/SignInPage.jsx",["60","61","62","63"],"import React, { useState } from 'react';\nimport styles from \"./SignInPage.module.css\";\nimport { Paper, Grid, Typography, Divider, Button, TextField, CssBaseline } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\n\nconst SignInPage = () => {\n    const [signin, setSignin] = useState({\n        login: \"\",\n        password: \"\",\n        error: \"\"\n    });\n\n\n    const handleSignin = (event) => {\n        event.preventDefault();\n        const valid = validate();\n        console.log(signin);\n    };\n\n    const handleChange = (event) => {\n        event.preventDefault();\n        console.log(event.target.name);\n        setSignin({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const validate = () => {\n        let error = \"\";\n\n        if (signin.login) {\n            error = \"invalid email\";\n            setSignin({\n                ['error']: error\n            });\n            return false;\n        };\n        return true;\n    }\n    console.log(signin);\n\n    return (\n        <div>\n            <CssBaseline />\n            <div className={styles.signin}>\n                <Paper className={styles.paper}>\n                    <Typography variant='h4' align='center' style={{ marginTop: '10%' }}>Sign-In</Typography>\n                    <Divider />\n                    <form onSubmit={e => handleSignin(e)}\n                        className={styles.form}>\n                        <TextField label=\"Login\" name='login' onChange={(e) => handleChange(e)}>\n                            {signin.login}\n                        </TextField>\n\n                        <TextField type=\"password\" label='Password' name='password' onChange={(e) => handleChange(e)}>\n                            {signin.password}\n                        </TextField>\n\n                        <div style={{ color: 'red' }}>\n                            {signin.error}\n                        </div>\n                        <Button variant=\"contained\" style={{ height: '12%' }} color='secondary'\n                            onClick={e => handleSignin(e)}\n                        >\n                            Sign In\n                        </Button>\n                    </form>\n                    <div style={{ marginBottom: '10%' }}>\n                        <Typography variant='h6' >New to This?  <a href='/signup'>SignUp</a></Typography>\n                    </div>\n                </Paper>\n            </div >\n        </div>\n    )\n}\n\nexport default SignInPage;","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/SignPage/SignUpPage.jsx",["64","65","66","67","68","69"],"import React, { useState } from 'react';\nimport styles from \"./SignInPage.module.css\";\nimport { Paper, Grid, Typography, Divider, Button, TextField, CssBaseline } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\n\nconst SignUpPage = () => {\n    const [signin, setSignin] = useState({\n        email: \"\",\n        login: \"\",\n        password: \"\",\n        re_password: \"\",\n        error: \"\"\n    });\n\n\n    const handleSignin = (event) => {\n        event.preventDefault();\n        const valid = validate();\n        console.log(signin);\n    };\n\n    const handleChange = (event) => {\n        event.preventDefault();\n        console.log(event.target.name);\n        setSignin({\n            [event.target.name]: event.target.value\n        });\n    };\n\n    const validate = () => {\n        let error = \"\";\n\n        if (signin.login) {\n            error = \"invalid email\";\n            setSignin({\n                ['error']: error\n            });\n            return false;\n        };\n        return true;\n    }\n    console.log(signin);\n\n    return (\n        <>\n            <CssBaseline />\n            <div className={styles.signin}>\n\n                <Paper className={styles.paper}>\n                    <Typography variant='h4'>Create Account</Typography>\n                    <Divider />\n                    <form className={styles.form}>\n                        <TextField label=\"Email\" name=\"email\">\n\n                        </TextField>\n                        <TextField label=\"Login\" name=\"login\">\n\n                        </TextField>\n                        <TextField type=\"password\" label=\"Password\" name=\"password\" helperText=\"Passwords must be at least 6 characters\">\n\n                        </TextField>\n                        <TextField type=\"password\" label=\"Re-enter password\" name=\"re_password\">\n\n                        </TextField>\n                        <Button variant='contained' style={{ marginTop: '20%' }} color=\"secondary\">\n                            Sign Up\n                        </Button>\n                    </form>\n                    <div style={{ marginBottom: '10%' }}>\n                        <Typography variant='h6' >Account exist?  <a href='/signin'>Sign-In</a></Typography>\n                    </div>\n                </Paper>\n            </div >\n        </>\n    )\n}\n\nexport default SignUpPage;","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/Footer/Footer.jsx",["70","71","72","73","74","75","76","77"],"import React from 'react';\nimport { Divider, Typography } from '@material-ui/core';\nimport styles from './Footer.module.css';\nimport { RiCopyrightLine } from 'react-icons/ri';\nimport { FaAppStoreIos, FaGooglePlay } from 'react-icons/fa'\n\nconst Footer = () => {\n    return (\n        <div className={styles.footerBG}>\n            <div className={styles.grid}>\n\n                <div className={styles.paymentmethods}>\n\n                    <Typography className={styles.subheader}>Payment methods</Typography>\n                    <ul className={styles.lemonul}>\n                        <li><a> MasterCard</a></li>\n                        <li><a>VISA</a></li>\n                    </ul>\n                </div>\n                <div className={styles.contacts}>\n                    <Typography className={styles.subheader}>Contacts</Typography>\n                    <ul className={styles.lemonul}>\n                        <li className={styles.lemonli}>1-234-567-8912</li>\n                        <li className={styles.lemonli}>1-234-567-8934</li>\n                        <li className={styles.lemonli}>email@gmail.com</li>\n                        <li className={styles.lemonli}><a>Ask Bot</a></li>\n                    </ul>\n                </div>\n                <div className={styles.applications}>\n                    <Typography className={styles.subheader}>Mobile Applications</Typography>\n                    <ul className={styles.lemonul}>\n                        <li style={{ display: 'flex', }}>\n                            <FaAppStoreIos style={{\n                                transform: 'translateX(-32%)', fontSize: '1.4em', marginLeft: '1.5%',\n\n                            }} />\n                            <Typography className={styles.appshover}>App Store</Typography>\n                        </li>\n                        <li style={{ display: 'flex' }}>\n                            <FaGooglePlay style={{ transform: 'translateX(-32%)', fontSize: '1.4em', marginLeft: '1.5%' }} />\n                            <Typography className={styles.appshover}>Google Play</Typography>\n                        </li>\n                    </ul>\n                </div>\n                <div className={styles.basicinfo}>\n                    <Typography className={styles.subheader}>Basic Info</Typography>\n                    <ul className={styles.lemonul}>\n                        <li className={styles.lemonli}>Order Status</li>\n                        <li className={styles.lemonli}>Shipping Rates</li>\n                        <li className={styles.lemonli}>Returns</li>\n                        <li className={styles.lemonli}>Size Guide</li>\n                        <li className={styles.lemonli}><a>FAQs</a></li>\n                    </ul>\n                </div>\n\n                <div className={styles.lemonisla}>\n                    <h1 className={styles.logo}>\n                        Lemon.isla\n                </h1>\n                    <ul className={styles.lemonul}>\n                        <li className={styles.lemonli}><a href=\"#\">telegram</a></li>\n                        <li className={styles.lemonli}><a href=\"#\">instagram</a></li>\n                        <li className={styles.lemonli}><a href=\"#\">youtube</a></li>\n                        <li className={styles.lemonli}><a href=\"#\">facebook</a></li>\n                    </ul>\n                </div>\n            </div>\n            <Divider style={{ backgroundColor: 'black', height: '0.4vh', opacity: 0.4 }} />\n            <div className={styles.lowfooter}>\n                <RiCopyrightLine style={{\n                    color: 'white', opacity: 0.7, marginLeft: '25%',\n                    transform: 'translate(25%, -18%)'\n                }} />\n                <Typography variant='body2' style={{\n                    color: 'white', opacity: 0.7, marginLeft: '0.5em'\n                }}>\n                    2020 All rights reserved. Designed by isla</Typography>\n                <h1 style={{ color: 'white', marginLeft: 'auto', width: '20%', opacity: 0.7 }}>\n                    sponsors\n                </h1>\n            </div>\n        </div>\n    );\n}\n\nexport default Footer;","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/HomePage/MainNavBar.jsx",[],"/home/isla/Documents/VSCode/ReactJS/lemon/src/components/HomePage/HomePage.jsx",["78","79","80","81","82","83","84","85","86","87","88","89"],"import React from \"react\";\nimport { Typography, Grid,  Divider } from \"@material-ui/core\";\nimport { NavLink } from 'react-router-dom';\n\nimport styles from \"./HomePage.module.css\";\nimport men from '../../images/men.jpg';\nimport women from '../../images/women.jpg';\nimport kids from '../../images/kids.jpg';\nimport { GrCaretNext, GrCaretPrevious, GrWifiNone } from 'react-icons/gr';\nimport makeCarousel from 'react-reveal/makeCarousel';\nimport Slide from 'react-reveal/Slide';\nimport styled, { css } from 'styled-components';\nimport Zoom from 'react-reveal/Zoom';\nimport card1 from '../../images/card1.jpeg';\nimport bags from '../../images/bags.jpg';\nimport blouses from '../../images/blouses.jpg';\nimport boots from '../../images/boots.jpg';\nimport coats from '../../images/coats.jpeg';\nimport jackets from '../../images/jackets.jpg';\nimport jeans from '../../images/jeans.jpg';\nimport printedshirts from '../../images/printedshirts.jpg';\n\n\nconst HomePage = () => {\n    const obj = { 'Men': men, 'Women': women, 'Kids': kids };\n\n    const Container = styled.div`\n    position: relative;\n    overflow: hidden;\n    width: 75%;\n    height: 95%;\n    `;\n\n    const Arrow = styled.div`\n    line-height: 100px;\n    z-index: 1000;\n    text-align: center;\n    position: absolute;\n    top: 30%;\n    width: 10%;\n    font-size: 3rem;\n    cursor: pointer;\n    user-select: none;\n    border-radius: 30%;\n\n    ${props => props.right ? css`left: 90%;` : css`left: 0%;`}\n\n    `;\n\n    const CarouselUI = ({ position, handleClick, children }) => (\n        <Container>\n\n            <Arrow onClick={handleClick} data-position={position - 1}>\n\n                <GrCaretPrevious style={{ transform: 'translate(-12%, 20%)' }} />\n            </Arrow>\n            {children}\n            <Arrow right onClick={handleClick} data-position={position + 1}><GrCaretNext style={{\n                transform: 'translate(12%, 20%)'\n            }} /></Arrow>\n        </Container>\n    );\n    const Carousel = makeCarousel(CarouselUI);\n\n\n    const renderItems = () => {\n        return Object.keys(obj).map((item, index) => {\n            return (\n                <div className={styles.card} key={index}>\n                    <NavLink to={{pathname: '/catalog', state: {name: item}}}>\n                        <div className={styles.cardcontent}>\n                            <img src={obj[item]} />\n                            <div className={styles.menText}>\n                                <Typography className={styles.textMen} \n                                style={{ fontSize: '2em', fontFamily: 'Lobster, cursive' }}>{item}\n                                </Typography>\n                                <GrCaretNext className={styles.next} />\n                            </div>\n                        </div>\n                    </NavLink>\n                </div>)\n        });\n    }\n\n    return (\n        <div>\n            <div className={styles.selectionmenu}>\n                <Grid container className={styles.cardBox}>\n                    {renderItems()}\n                </Grid>\n            </div >\n\n            <div className={styles.secondpage}>\n                <div style={{ position: 'relative', background: 'rgb(28, 28, 71)', height: '35%', width: '100%' }}>\n                </div>\n                <div className={styles.secondpageCont}>\n                    <div style={{ marginTop: '2%', marginBottom: '2%', display: 'flex', fontSize: '2.2rem' }}>\n                        <p>Relevant this</p>\n                        <p style={{ fontWeight: '700', transform: 'translateX(10%)' }}>Season</p>\n                    </div>\n                    <Carousel defaultWait='none'>\n                        <Slide right>\n                            <Zoom >\n                                <div className={styles.slides}>\n                                    <div className={styles.eachslide}>\n                                        <img src={bags} />\n                                        <p>Bags</p>\n                                    </div>\n                                    <div className={styles.eachslide}>\n                                        <img src={blouses} />\n                                        <p>Blouses</p>\n                                    </div>\n                                    <div className={styles.eachslide}>\n                                        <img src={boots} />\n                                        <p>Boots</p>\n                                    </div>\n                                </div>\n                            </Zoom>\n                        </Slide>\n                        <Slide right>\n                            <Zoom >\n                                <div className={styles.slides}>\n                                    <div className={styles.eachslide}>\n                                        <img src={coats} />\n                                        <p>Coats</p>\n                                    </div>\n                                    <div className={styles.eachslide}>\n                                        <img src={jackets} />\n                                        <p>Jackets</p>\n                                    </div>\n                                    <div className={styles.eachslide}>\n                                        <img src={jeans} />\n                                        <p>Jeans</p>\n                                    </div>\n                                </div>\n                            </Zoom>\n                        </Slide>\n                    </Carousel>\n                </div>\n            </div>\n            <Divider style={{ height: '0.1rem', background: '#d0d9e2' }} />\n\n            <div className={styles.thirdpage}>\n                <div className={styles.thirdpageHeaders}>\n                    <h1>Popular</h1>\n                    <h2>Catalog</h2>\n                </div>\n                <div className={styles.thirdpagebox}>\n                    <div className={styles.box} >\n                        <div className={styles.imgBox1}>\n                            <img src={printedshirts} />\n                        </div>\n                        <div className={styles.contentBox1}>\n                            <div className={styles.content1}>\n                                <h2>Printed men's shirts</h2>\n                                <p>Opportunity to create your own print in chosen shir qweqwet</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={styles.box} >\n                        <div className={styles.imgBox2}>\n                            <img src={printedshirts} />\n                        </div>\n                        <div className={styles.contentBox2}>\n                            <div className={styles.content2}>\n                                <h2>Printed men's shirts</h2>\n                                <p>Opportunity to create your own print in chosen shir qweqwet</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={styles.box} >\n                        <div className={styles.imgBox1}>\n                            <img src={printedshirts} />\n                        </div>\n                        <div className={styles.contentBox1}>\n                            <div className={styles.content1}>\n                                <h2>Printed men's shirts</h2>\n                                <p>Opportunity to create your own print in chosen shir qweqwet</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className={styles.area1} >\n                </div >\n                <div className={styles.area2} >\n                </div >\n                <div className={styles.area3} >\n                </div >\n                <div className={styles.area4} >\n                </div >\n            </div>\n\n            <div className={styles.prelastpage}>\n                <div style={{ marginTop: '10%' }}>\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#455066\" fill-opacity=\"1\" d=\"M0,224L48,202.7C96,181,192,139,288,117.3C384,96,480,96,576,117.3C672,139,768,181,864,192C960,203,1056,181,1152,160C1248,139,1344,117,1392,106.7L1440,96L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"></path></svg>\n                </div>\n                <div className={styles.pagecontent}>\n                    <Typography variant=\"h4\" style={{\n                        color: '#fff', opacity: 0.85,\n                        transform: 'translateY(-200%)'\n                    }}>\n                        Members Lemon.isla can save ~15% per purchase of their shopping\n                    </Typography>\n                    <Typography variant=\"subtitle1\" style={{\n                        color: '#fff', opacity: 0.7,\n                        transform: 'translateY(-200%)'\n                    }}>\n                        You can always become a member of our community. Never overpay in future!\n                    </Typography>\n                    <div className={styles.emailsend}>\n                        <input id=\"enteremail\" placeholder=\"Email\" label=\"asdsad\" className={styles.enterEmail} />\n                        <label for=\"enteremail\" className={styles.labelEmail}>Your Email</label>\n                        <button className={styles.emailButton} >Send</button>\n                    </div>\n                </div>\n                <div >\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 400\"><path fill=\"#455066\" fill-opacity=\"1\" d=\"M0,224L48,202.7C96,181,192,139,288,117.3C384,96,480,96,576,117.3C672,139,768,181,864,192C960,203,1056,181,1152,160C1248,139,1344,117,1392,106.7L1440,96L1440,0L1392,0C1344,0,1248,0,1152,0C1056,0,960,0,864,0C768,0,672,0,576,0C480,0,384,0,288,0C192,0,96,0,48,0L0,0Z\"></path></svg>\n                </div>\n            </div>\n\n        </div >\n    );\n};\n\nexport default HomePage;\n","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/HomePage/CatalogNavBar.jsx",["90","91","92"],"import React, { useState } from 'react';\n\nimport { catalogNavItems } from './navBarItems';\n\nimport styles from \"./HomePage.module.css\";\n\nimport { NavLink } from \"react-router-dom\";\n\nimport { BsSearch } from 'react-icons/bs';\n\nimport { Divider, FormControl, TextField } from '@material-ui/core'\n\n\nconst CatalogNavBar = () => {\n    const { clicked, setClicked } = useState(false);\n\n    return (\n        <div>\n            <nav className={styles.catalogNav} style={{\n                visibility: window.location.pathname === '/signin' ? 'hidden' : window.location.pathname === '/signup' ? 'hidden' : 'visible'\n            }}>\n\n                <a href='/lemon' style={{ cursor: 'pointer' }}>\n                    <svg\n                        width=\"192\" height=\"52\" viewBox=\"0 0 192 52\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" >\n                        <mask id=\"path-1-outside-1\" maskUnits=\"userSpaceOnUse\" x=\"0.270004\" y=\"0.700012\" width=\"191\" height=\"51\" fill=\"black\">\n                            <rect fill=\"white\" x=\"0.270004\" y=\"0.700012\" width=\"191\" height=\"51\" />\n                            <path d=\"M28.155 48.25C26.805 48.25 25.47 47.86 24.15 47.08C22.86 46.33 21.21 45.16 19.2 43.57C17.7 42.37 16.41 41.395 15.33 40.645C14.28 39.925 13.125 39.31 11.865 38.8C10.635 38.29 9.375 38.035 8.085 38.035C7.635 38.035 7.29 38.05 7.05 38.08L13.755 6.89501C11.745 7.70501 10.185 8.95001 9.075 10.63C7.995 12.28 7.455 14.305 7.455 16.705C7.455 17.815 7.56 18.595 7.77 19.045C7.98 19.465 8.085 19.705 8.085 19.765C6.465 19.765 5.25 19.435 4.44 18.775C3.66 18.085 3.27 16.96 3.27 15.4C3.27 13.48 4.05 11.62 5.61 9.82001C7.2 7.99001 9.225 6.52001 11.685 5.41001C14.145 4.27001 16.605 3.70001 19.065 3.70001C19.485 3.70001 20.085 3.73001 20.865 3.79001L13.935 36.1C14.775 36.31 15.63 36.61 16.5 37C17.4 37.42 18.48 37.975 19.74 38.665C21.69 39.715 23.355 40.51 24.735 41.05C26.115 41.62 27.555 41.905 29.055 41.905C30.405 41.905 31.665 41.665 32.835 41.185C32.595 43.375 32.055 45.1 31.215 46.36C30.405 47.62 29.385 48.25 28.155 48.25Z\" />\n                            <path d=\"M26.4858 37.27C24.2658 37.27 22.5408 36.7 21.3108 35.56C20.0808 34.39 19.4658 32.575 19.4658 30.115C19.4658 28.045 19.8708 25.765 20.6808 23.275C21.4908 20.785 22.8108 18.64 24.6408 16.84C26.4708 15.01 28.7958 14.095 31.6158 14.095C34.9158 14.095 36.5658 15.535 36.5658 18.415C36.5658 20.095 36.0858 21.64 35.1258 23.05C34.1658 24.46 32.8908 25.6 31.3008 26.47C29.7108 27.31 28.0158 27.79 26.2158 27.91C26.1558 28.81 26.1258 29.41 26.1258 29.71C26.1258 31.18 26.3808 32.185 26.8908 32.725C27.4008 33.235 28.2258 33.49 29.3658 33.49C30.9858 33.49 32.3658 33.115 33.5058 32.365C34.6758 31.615 35.9508 30.475 37.3308 28.945H38.8608C35.5308 34.495 31.4058 37.27 26.4858 37.27ZM26.5758 25.75C27.6858 25.69 28.7358 25.3 29.7258 24.58C30.7458 23.86 31.5558 22.945 32.1558 21.835C32.7858 20.725 33.1008 19.555 33.1008 18.325C33.1008 17.095 32.7258 16.48 31.9758 16.48C30.8958 16.48 29.8308 17.425 28.7808 19.315C27.7608 21.205 27.0258 23.35 26.5758 25.75Z\" />\n                            <path d=\"M64.6813 37.27C62.8513 37.27 61.5013 36.79 60.6313 35.83C59.7913 34.84 59.3713 33.625 59.3713 32.185C59.3713 31.555 59.4463 30.85 59.5963 30.07C59.7463 29.26 59.8963 28.48 60.0463 27.73C60.2263 26.98 60.3463 26.5 60.4063 26.29C60.6463 25.24 60.8713 24.205 61.0813 23.185C61.2913 22.165 61.3963 21.34 61.3963 20.71C61.3963 19.18 60.8563 18.415 59.7763 18.415C58.9963 18.415 58.3063 18.805 57.7063 19.585C57.1063 20.335 56.6263 21.325 56.2663 22.555L53.2063 37H46.7263L50.0113 21.475C50.1013 21.115 50.1463 20.74 50.1463 20.35C50.1463 19.03 49.6963 18.37 48.7963 18.37C47.9563 18.37 47.2213 18.76 46.5913 19.54C45.9913 20.29 45.5113 21.295 45.1513 22.555L42.0913 37H35.6113L40.3813 14.5H46.8613L46.3663 16.84C47.8963 15.13 49.7263 14.275 51.8563 14.275C54.4963 14.275 56.0413 15.565 56.4913 18.145C58.1413 15.595 60.2263 14.32 62.7463 14.32C64.2763 14.32 65.4913 14.74 66.3913 15.58C67.2913 16.42 67.7413 17.695 67.7413 19.405C67.7413 20.275 67.6363 21.25 67.4263 22.33C67.2163 23.38 66.9163 24.67 66.5263 26.2C66.2863 27.13 66.0613 28.045 65.8513 28.945C65.6713 29.815 65.5813 30.505 65.5813 31.015C65.5813 31.615 65.7163 32.08 65.9863 32.41C66.2563 32.74 66.7213 32.905 67.3813 32.905C68.2813 32.905 69.0013 32.59 69.5413 31.96C70.0813 31.3 70.6213 30.295 71.1613 28.945H73.0513C71.9413 32.245 70.6513 34.465 69.1813 35.605C67.7413 36.715 66.2413 37.27 64.6813 37.27Z\" />\n                            <path d=\"M77.7292 37.18C75.5092 37.18 73.7542 36.61 72.4642 35.47C71.1742 34.33 70.5292 32.53 70.5292 30.07C70.5292 28.03 70.9492 25.765 71.7892 23.275C72.6292 20.785 73.9792 18.64 75.8392 16.84C77.6992 15.01 80.0392 14.095 82.8592 14.095C86.6992 14.095 88.6192 16.495 88.6192 21.295V21.34C88.7092 21.37 88.8742 21.385 89.1142 21.385C90.1042 21.385 91.2442 21.13 92.5342 20.62C93.8242 20.08 94.9942 19.435 96.0442 18.685L96.4492 19.9C95.5792 20.83 94.4392 21.625 93.0292 22.285C91.6492 22.915 90.1342 23.365 88.4842 23.635C88.2442 26.365 87.6292 28.75 86.6392 30.79C85.6492 32.83 84.3742 34.405 82.8142 35.515C81.2542 36.625 79.5592 37.18 77.7292 37.18ZM79.5292 33.13C80.2492 33.13 80.9692 32.725 81.6892 31.915C82.4092 31.075 83.0392 29.95 83.5792 28.54C84.1192 27.1 84.5092 25.51 84.7492 23.77C83.9392 23.59 83.5342 22.96 83.5342 21.88C83.5342 20.65 83.9992 19.84 84.9292 19.45C84.8692 18.46 84.7192 17.785 84.4792 17.425C84.2392 17.035 83.8192 16.84 83.2192 16.84C82.2292 16.84 81.2692 17.56 80.3392 19C79.4092 20.44 78.6592 22.165 78.0892 24.175C77.5192 26.185 77.2342 27.955 77.2342 29.485C77.2342 30.925 77.3992 31.9 77.7292 32.41C78.0592 32.89 78.6592 33.13 79.5292 33.13Z\" />\n                            <path d=\"M106.415 37.27C104.825 37.27 103.67 36.79 102.95 35.83C102.23 34.87 101.87 33.655 101.87 32.185C101.87 31.555 101.945 30.85 102.095 30.07C102.245 29.26 102.395 28.48 102.545 27.73C102.725 26.98 102.845 26.5 102.905 26.29C103.145 25.24 103.37 24.205 103.58 23.185C103.79 22.165 103.895 21.34 103.895 20.71C103.895 19.18 103.355 18.415 102.275 18.415C101.495 18.415 100.805 18.805 100.205 19.585C99.6046 20.335 99.1246 21.325 98.7646 22.555L95.7046 37H89.2246L93.9946 14.5H100.475L99.9796 16.84C101.48 15.16 103.235 14.32 105.245 14.32C106.775 14.32 107.99 14.74 108.89 15.58C109.79 16.42 110.24 17.695 110.24 19.405C110.24 20.275 110.135 21.25 109.925 22.33C109.715 23.38 109.415 24.67 109.025 26.2C108.785 27.13 108.56 28.045 108.35 28.945C108.17 29.815 108.08 30.505 108.08 31.015C108.08 31.615 108.215 32.08 108.485 32.41C108.755 32.74 109.22 32.905 109.88 32.905C110.6 32.905 111.095 32.815 111.365 32.635C111.185 34.165 110.63 35.32 109.7 36.1C108.8 36.88 107.705 37.27 106.415 37.27Z\" />\n                            <path d=\"M116.319 37.18C115.329 37.18 114.489 36.835 113.799 36.145C113.109 35.455 112.764 34.615 112.764 33.625C112.764 32.635 113.109 31.795 113.799 31.105C114.489 30.385 115.329 30.025 116.319 30.025C117.309 30.025 118.149 30.385 118.839 31.105C119.559 31.795 119.919 32.635 119.919 33.625C119.919 34.615 119.559 35.455 118.839 36.145C118.149 36.835 117.309 37.18 116.319 37.18Z\" />\n                            <path d=\"M130.705 12.07C129.715 12.07 128.875 11.725 128.185 11.035C127.495 10.345 127.15 9.50501 127.15 8.51501C127.15 7.52501 127.495 6.68501 128.185 5.99501C128.875 5.27501 129.715 4.91501 130.705 4.91501C131.695 4.91501 132.535 5.27501 133.225 5.99501C133.945 6.68501 134.305 7.52501 134.305 8.51501C134.305 9.50501 133.945 10.345 133.225 11.035C132.535 11.725 131.695 12.07 130.705 12.07ZM127.645 37.27C126.205 37.27 125.035 36.82 124.135 35.92C123.265 35.02 122.83 33.67 122.83 31.87C122.83 31.12 122.95 30.145 123.19 28.945L126.25 14.5H132.73L129.49 29.8C129.37 30.25 129.31 30.73 129.31 31.24C129.31 31.84 129.445 32.275 129.715 32.545C130.015 32.785 130.495 32.905 131.155 32.905C132.025 32.905 132.835 32.545 133.585 31.825C134.335 31.075 134.875 30.115 135.205 28.945H137.095C135.985 32.185 134.56 34.39 132.82 35.56C131.08 36.7 129.355 37.27 127.645 37.27Z\" />\n                            <path d=\"M140.318 37.27C138.878 37.27 137.663 37 136.673 36.46C135.683 35.89 134.947 35.17 134.467 34.3C133.987 33.4 133.747 32.47 133.747 31.51C133.747 30.52 133.987 29.665 134.467 28.945C134.917 28.195 135.473 27.655 136.133 27.325C137.303 25.225 138.323 23.11 139.193 20.98C140.063 18.82 140.887 16.495 141.667 14.005L148.327 13.105C148.477 16.945 148.732 21.1 149.092 25.57C149.242 27.37 149.318 28.675 149.318 29.485C149.318 30.175 149.257 30.745 149.137 31.195C150.547 30.385 151.628 29.635 152.378 28.945H154.268C152.348 31.165 150.053 33.04 147.383 34.57C146.513 35.5 145.433 36.19 144.143 36.64C142.883 37.06 141.608 37.27 140.318 37.27ZM138.878 33.715C139.988 33.715 140.917 33.385 141.667 32.725C142.417 32.065 142.792 31 142.792 29.53C142.792 28.63 142.703 27.37 142.523 25.75C142.223 22.33 142.028 20.035 141.938 18.865C141.217 21.235 140.002 24.07 138.292 27.37C138.982 27.73 139.327 28.255 139.327 28.945C139.327 29.515 139.132 30.025 138.742 30.475C138.382 30.925 137.918 31.15 137.348 31.15C136.718 31.15 136.313 30.955 136.133 30.565C136.133 31.645 136.342 32.44 136.762 32.95C137.212 33.46 137.918 33.715 138.878 33.715Z\" />\n                            <path d=\"M156.825 37.27C155.385 37.27 154.215 36.82 153.315 35.92C152.445 35.02 152.01 33.67 152.01 31.87C152.01 31.12 152.13 30.145 152.37 28.945L157.185 6.40001L163.845 5.50001L158.67 29.8C158.55 30.25 158.49 30.73 158.49 31.24C158.49 31.84 158.625 32.275 158.895 32.545C159.195 32.785 159.675 32.905 160.335 32.905C161.205 32.905 162.015 32.545 162.765 31.825C163.515 31.075 164.055 30.115 164.385 28.945H166.275C165.165 32.185 163.74 34.39 162 35.56C160.26 36.7 158.535 37.27 156.825 37.27Z\" />\n                            <path d=\"M169.767 37.27C168.057 37.27 166.632 36.685 165.492 35.515C164.352 34.345 163.782 32.515 163.782 30.025C163.782 27.805 164.217 25.48 165.087 23.05C165.987 20.59 167.307 18.52 169.047 16.84C170.817 15.13 172.917 14.275 175.347 14.275C176.577 14.275 177.492 14.485 178.092 14.905C178.692 15.325 178.992 15.88 178.992 16.57V16.885L179.487 14.5H185.967L182.727 29.8C182.607 30.25 182.547 30.73 182.547 31.24C182.547 31.84 182.682 32.275 182.952 32.545C183.252 32.785 183.732 32.905 184.392 32.905C184.812 32.905 185.142 32.845 185.382 32.725C184.722 34.405 184.092 35.59 183.492 36.28C182.892 36.94 182.022 37.27 180.882 37.27C179.652 37.27 178.647 36.91 177.867 36.19C177.117 35.44 176.652 34.405 176.472 33.085C174.642 35.875 172.407 37.27 169.767 37.27ZM172.692 32.905C173.442 32.905 174.177 32.56 174.897 31.87C175.647 31.15 176.157 30.175 176.427 28.945L178.587 18.775C178.587 18.385 178.437 18.01 178.137 17.65C177.837 17.26 177.372 17.065 176.742 17.065C175.542 17.065 174.462 17.77 173.502 19.18C172.542 20.56 171.792 22.24 171.252 24.22C170.712 26.17 170.442 27.895 170.442 29.395C170.442 30.895 170.652 31.855 171.072 32.275C171.522 32.695 172.062 32.905 172.692 32.905Z\" />\n                        </mask>\n                        <path d=\"M28.155 48.25C26.805 48.25 25.47 47.86 24.15 47.08C22.86 46.33 21.21 45.16 19.2 43.57C17.7 42.37 16.41 41.395 15.33 40.645C14.28 39.925 13.125 39.31 11.865 38.8C10.635 38.29 9.375 38.035 8.085 38.035C7.635 38.035 7.29 38.05 7.05 38.08L13.755 6.89501C11.745 7.70501 10.185 8.95001 9.075 10.63C7.995 12.28 7.455 14.305 7.455 16.705C7.455 17.815 7.56 18.595 7.77 19.045C7.98 19.465 8.085 19.705 8.085 19.765C6.465 19.765 5.25 19.435 4.44 18.775C3.66 18.085 3.27 16.96 3.27 15.4C3.27 13.48 4.05 11.62 5.61 9.82001C7.2 7.99001 9.225 6.52001 11.685 5.41001C14.145 4.27001 16.605 3.70001 19.065 3.70001C19.485 3.70001 20.085 3.73001 20.865 3.79001L13.935 36.1C14.775 36.31 15.63 36.61 16.5 37C17.4 37.42 18.48 37.975 19.74 38.665C21.69 39.715 23.355 40.51 24.735 41.05C26.115 41.62 27.555 41.905 29.055 41.905C30.405 41.905 31.665 41.665 32.835 41.185C32.595 43.375 32.055 45.1 31.215 46.36C30.405 47.62 29.385 48.25 28.155 48.25Z\" fill=\"white\" />\n                        <path d=\"M26.4858 37.27C24.2658 37.27 22.5408 36.7 21.3108 35.56C20.0808 34.39 19.4658 32.575 19.4658 30.115C19.4658 28.045 19.8708 25.765 20.6808 23.275C21.4908 20.785 22.8108 18.64 24.6408 16.84C26.4708 15.01 28.7958 14.095 31.6158 14.095C34.9158 14.095 36.5658 15.535 36.5658 18.415C36.5658 20.095 36.0858 21.64 35.1258 23.05C34.1658 24.46 32.8908 25.6 31.3008 26.47C29.7108 27.31 28.0158 27.79 26.2158 27.91C26.1558 28.81 26.1258 29.41 26.1258 29.71C26.1258 31.18 26.3808 32.185 26.8908 32.725C27.4008 33.235 28.2258 33.49 29.3658 33.49C30.9858 33.49 32.3658 33.115 33.5058 32.365C34.6758 31.615 35.9508 30.475 37.3308 28.945H38.8608C35.5308 34.495 31.4058 37.27 26.4858 37.27ZM26.5758 25.75C27.6858 25.69 28.7358 25.3 29.7258 24.58C30.7458 23.86 31.5558 22.945 32.1558 21.835C32.7858 20.725 33.1008 19.555 33.1008 18.325C33.1008 17.095 32.7258 16.48 31.9758 16.48C30.8958 16.48 29.8308 17.425 28.7808 19.315C27.7608 21.205 27.0258 23.35 26.5758 25.75Z\" fill=\"white\" />\n                        <path d=\"M64.6813 37.27C62.8513 37.27 61.5013 36.79 60.6313 35.83C59.7913 34.84 59.3713 33.625 59.3713 32.185C59.3713 31.555 59.4463 30.85 59.5963 30.07C59.7463 29.26 59.8963 28.48 60.0463 27.73C60.2263 26.98 60.3463 26.5 60.4063 26.29C60.6463 25.24 60.8713 24.205 61.0813 23.185C61.2913 22.165 61.3963 21.34 61.3963 20.71C61.3963 19.18 60.8563 18.415 59.7763 18.415C58.9963 18.415 58.3063 18.805 57.7063 19.585C57.1063 20.335 56.6263 21.325 56.2663 22.555L53.2063 37H46.7263L50.0113 21.475C50.1013 21.115 50.1463 20.74 50.1463 20.35C50.1463 19.03 49.6963 18.37 48.7963 18.37C47.9563 18.37 47.2213 18.76 46.5913 19.54C45.9913 20.29 45.5113 21.295 45.1513 22.555L42.0913 37H35.6113L40.3813 14.5H46.8613L46.3663 16.84C47.8963 15.13 49.7263 14.275 51.8563 14.275C54.4963 14.275 56.0413 15.565 56.4913 18.145C58.1413 15.595 60.2263 14.32 62.7463 14.32C64.2763 14.32 65.4913 14.74 66.3913 15.58C67.2913 16.42 67.7413 17.695 67.7413 19.405C67.7413 20.275 67.6363 21.25 67.4263 22.33C67.2163 23.38 66.9163 24.67 66.5263 26.2C66.2863 27.13 66.0613 28.045 65.8513 28.945C65.6713 29.815 65.5813 30.505 65.5813 31.015C65.5813 31.615 65.7163 32.08 65.9863 32.41C66.2563 32.74 66.7213 32.905 67.3813 32.905C68.2813 32.905 69.0013 32.59 69.5413 31.96C70.0813 31.3 70.6213 30.295 71.1613 28.945H73.0513C71.9413 32.245 70.6513 34.465 69.1813 35.605C67.7413 36.715 66.2413 37.27 64.6813 37.27Z\" fill=\"white\" />\n                        <path d=\"M77.7292 37.18C75.5092 37.18 73.7542 36.61 72.4642 35.47C71.1742 34.33 70.5292 32.53 70.5292 30.07C70.5292 28.03 70.9492 25.765 71.7892 23.275C72.6292 20.785 73.9792 18.64 75.8392 16.84C77.6992 15.01 80.0392 14.095 82.8592 14.095C86.6992 14.095 88.6192 16.495 88.6192 21.295V21.34C88.7092 21.37 88.8742 21.385 89.1142 21.385C90.1042 21.385 91.2442 21.13 92.5342 20.62C93.8242 20.08 94.9942 19.435 96.0442 18.685L96.4492 19.9C95.5792 20.83 94.4392 21.625 93.0292 22.285C91.6492 22.915 90.1342 23.365 88.4842 23.635C88.2442 26.365 87.6292 28.75 86.6392 30.79C85.6492 32.83 84.3742 34.405 82.8142 35.515C81.2542 36.625 79.5592 37.18 77.7292 37.18ZM79.5292 33.13C80.2492 33.13 80.9692 32.725 81.6892 31.915C82.4092 31.075 83.0392 29.95 83.5792 28.54C84.1192 27.1 84.5092 25.51 84.7492 23.77C83.9392 23.59 83.5342 22.96 83.5342 21.88C83.5342 20.65 83.9992 19.84 84.9292 19.45C84.8692 18.46 84.7192 17.785 84.4792 17.425C84.2392 17.035 83.8192 16.84 83.2192 16.84C82.2292 16.84 81.2692 17.56 80.3392 19C79.4092 20.44 78.6592 22.165 78.0892 24.175C77.5192 26.185 77.2342 27.955 77.2342 29.485C77.2342 30.925 77.3992 31.9 77.7292 32.41C78.0592 32.89 78.6592 33.13 79.5292 33.13Z\" fill=\"white\" />\n                        <path d=\"M106.415 37.27C104.825 37.27 103.67 36.79 102.95 35.83C102.23 34.87 101.87 33.655 101.87 32.185C101.87 31.555 101.945 30.85 102.095 30.07C102.245 29.26 102.395 28.48 102.545 27.73C102.725 26.98 102.845 26.5 102.905 26.29C103.145 25.24 103.37 24.205 103.58 23.185C103.79 22.165 103.895 21.34 103.895 20.71C103.895 19.18 103.355 18.415 102.275 18.415C101.495 18.415 100.805 18.805 100.205 19.585C99.6046 20.335 99.1246 21.325 98.7646 22.555L95.7046 37H89.2246L93.9946 14.5H100.475L99.9796 16.84C101.48 15.16 103.235 14.32 105.245 14.32C106.775 14.32 107.99 14.74 108.89 15.58C109.79 16.42 110.24 17.695 110.24 19.405C110.24 20.275 110.135 21.25 109.925 22.33C109.715 23.38 109.415 24.67 109.025 26.2C108.785 27.13 108.56 28.045 108.35 28.945C108.17 29.815 108.08 30.505 108.08 31.015C108.08 31.615 108.215 32.08 108.485 32.41C108.755 32.74 109.22 32.905 109.88 32.905C110.6 32.905 111.095 32.815 111.365 32.635C111.185 34.165 110.63 35.32 109.7 36.1C108.8 36.88 107.705 37.27 106.415 37.27Z\" fill=\"white\" />\n                        <path d=\"M116.319 37.18C115.329 37.18 114.489 36.835 113.799 36.145C113.109 35.455 112.764 34.615 112.764 33.625C112.764 32.635 113.109 31.795 113.799 31.105C114.489 30.385 115.329 30.025 116.319 30.025C117.309 30.025 118.149 30.385 118.839 31.105C119.559 31.795 119.919 32.635 119.919 33.625C119.919 34.615 119.559 35.455 118.839 36.145C118.149 36.835 117.309 37.18 116.319 37.18Z\" fill=\"white\" />\n                        <path d=\"M130.705 12.07C129.715 12.07 128.875 11.725 128.185 11.035C127.495 10.345 127.15 9.50501 127.15 8.51501C127.15 7.52501 127.495 6.68501 128.185 5.99501C128.875 5.27501 129.715 4.91501 130.705 4.91501C131.695 4.91501 132.535 5.27501 133.225 5.99501C133.945 6.68501 134.305 7.52501 134.305 8.51501C134.305 9.50501 133.945 10.345 133.225 11.035C132.535 11.725 131.695 12.07 130.705 12.07ZM127.645 37.27C126.205 37.27 125.035 36.82 124.135 35.92C123.265 35.02 122.83 33.67 122.83 31.87C122.83 31.12 122.95 30.145 123.19 28.945L126.25 14.5H132.73L129.49 29.8C129.37 30.25 129.31 30.73 129.31 31.24C129.31 31.84 129.445 32.275 129.715 32.545C130.015 32.785 130.495 32.905 131.155 32.905C132.025 32.905 132.835 32.545 133.585 31.825C134.335 31.075 134.875 30.115 135.205 28.945H137.095C135.985 32.185 134.56 34.39 132.82 35.56C131.08 36.7 129.355 37.27 127.645 37.27Z\" fill=\"white\" />\n                        <path d=\"M140.318 37.27C138.878 37.27 137.663 37 136.673 36.46C135.683 35.89 134.947 35.17 134.467 34.3C133.987 33.4 133.747 32.47 133.747 31.51C133.747 30.52 133.987 29.665 134.467 28.945C134.917 28.195 135.473 27.655 136.133 27.325C137.303 25.225 138.323 23.11 139.193 20.98C140.063 18.82 140.887 16.495 141.667 14.005L148.327 13.105C148.477 16.945 148.732 21.1 149.092 25.57C149.242 27.37 149.318 28.675 149.318 29.485C149.318 30.175 149.257 30.745 149.137 31.195C150.547 30.385 151.628 29.635 152.378 28.945H154.268C152.348 31.165 150.053 33.04 147.383 34.57C146.513 35.5 145.433 36.19 144.143 36.64C142.883 37.06 141.608 37.27 140.318 37.27ZM138.878 33.715C139.988 33.715 140.917 33.385 141.667 32.725C142.417 32.065 142.792 31 142.792 29.53C142.792 28.63 142.703 27.37 142.523 25.75C142.223 22.33 142.028 20.035 141.938 18.865C141.217 21.235 140.002 24.07 138.292 27.37C138.982 27.73 139.327 28.255 139.327 28.945C139.327 29.515 139.132 30.025 138.742 30.475C138.382 30.925 137.918 31.15 137.348 31.15C136.718 31.15 136.313 30.955 136.133 30.565C136.133 31.645 136.342 32.44 136.762 32.95C137.212 33.46 137.918 33.715 138.878 33.715Z\" fill=\"white\" />\n                        <path d=\"M156.825 37.27C155.385 37.27 154.215 36.82 153.315 35.92C152.445 35.02 152.01 33.67 152.01 31.87C152.01 31.12 152.13 30.145 152.37 28.945L157.185 6.40001L163.845 5.50001L158.67 29.8C158.55 30.25 158.49 30.73 158.49 31.24C158.49 31.84 158.625 32.275 158.895 32.545C159.195 32.785 159.675 32.905 160.335 32.905C161.205 32.905 162.015 32.545 162.765 31.825C163.515 31.075 164.055 30.115 164.385 28.945H166.275C165.165 32.185 163.74 34.39 162 35.56C160.26 36.7 158.535 37.27 156.825 37.27Z\" fill=\"white\" />\n                        <path d=\"M169.767 37.27C168.057 37.27 166.632 36.685 165.492 35.515C164.352 34.345 163.782 32.515 163.782 30.025C163.782 27.805 164.217 25.48 165.087 23.05C165.987 20.59 167.307 18.52 169.047 16.84C170.817 15.13 172.917 14.275 175.347 14.275C176.577 14.275 177.492 14.485 178.092 14.905C178.692 15.325 178.992 15.88 178.992 16.57V16.885L179.487 14.5H185.967L182.727 29.8C182.607 30.25 182.547 30.73 182.547 31.24C182.547 31.84 182.682 32.275 182.952 32.545C183.252 32.785 183.732 32.905 184.392 32.905C184.812 32.905 185.142 32.845 185.382 32.725C184.722 34.405 184.092 35.59 183.492 36.28C182.892 36.94 182.022 37.27 180.882 37.27C179.652 37.27 178.647 36.91 177.867 36.19C177.117 35.44 176.652 34.405 176.472 33.085C174.642 35.875 172.407 37.27 169.767 37.27ZM172.692 32.905C173.442 32.905 174.177 32.56 174.897 31.87C175.647 31.15 176.157 30.175 176.427 28.945L178.587 18.775C178.587 18.385 178.437 18.01 178.137 17.65C177.837 17.26 177.372 17.065 176.742 17.065C175.542 17.065 174.462 17.77 173.502 19.18C172.542 20.56 171.792 22.24 171.252 24.22C170.712 26.17 170.442 27.895 170.442 29.395C170.442 30.895 170.652 31.855 171.072 32.275C171.522 32.695 172.062 32.905 172.692 32.905Z\" fill=\"white\" />\n                        <path d=\"M28.155 48.25C26.805 48.25 25.47 47.86 24.15 47.08C22.86 46.33 21.21 45.16 19.2 43.57C17.7 42.37 16.41 41.395 15.33 40.645C14.28 39.925 13.125 39.31 11.865 38.8C10.635 38.29 9.375 38.035 8.085 38.035C7.635 38.035 7.29 38.05 7.05 38.08L13.755 6.89501C11.745 7.70501 10.185 8.95001 9.075 10.63C7.995 12.28 7.455 14.305 7.455 16.705C7.455 17.815 7.56 18.595 7.77 19.045C7.98 19.465 8.085 19.705 8.085 19.765C6.465 19.765 5.25 19.435 4.44 18.775C3.66 18.085 3.27 16.96 3.27 15.4C3.27 13.48 4.05 11.62 5.61 9.82001C7.2 7.99001 9.225 6.52001 11.685 5.41001C14.145 4.27001 16.605 3.70001 19.065 3.70001C19.485 3.70001 20.085 3.73001 20.865 3.79001L13.935 36.1C14.775 36.31 15.63 36.61 16.5 37C17.4 37.42 18.48 37.975 19.74 38.665C21.69 39.715 23.355 40.51 24.735 41.05C26.115 41.62 27.555 41.905 29.055 41.905C30.405 41.905 31.665 41.665 32.835 41.185C32.595 43.375 32.055 45.1 31.215 46.36C30.405 47.62 29.385 48.25 28.155 48.25Z\" stroke=\"black\" strokeWidth=\"6\" mask=\"url(#path-1-outside-1)\" />\n                        <path d=\"M26.4858 37.27C24.2658 37.27 22.5408 36.7 21.3108 35.56C20.0808 34.39 19.4658 32.575 19.4658 30.115C19.4658 28.045 19.8708 25.765 20.6808 23.275C21.4908 20.785 22.8108 18.64 24.6408 16.84C26.4708 15.01 28.7958 14.095 31.6158 14.095C34.9158 14.095 36.5658 15.535 36.5658 18.415C36.5658 20.095 36.0858 21.64 35.1258 23.05C34.1658 24.46 32.8908 25.6 31.3008 26.47C29.7108 27.31 28.0158 27.79 26.2158 27.91C26.1558 28.81 26.1258 29.41 26.1258 29.71C26.1258 31.18 26.3808 32.185 26.8908 32.725C27.4008 33.235 28.2258 33.49 29.3658 33.49C30.9858 33.49 32.3658 33.115 33.5058 32.365C34.6758 31.615 35.9508 30.475 37.3308 28.945H38.8608C35.5308 34.495 31.4058 37.27 26.4858 37.27ZM26.5758 25.75C27.6858 25.69 28.7358 25.3 29.7258 24.58C30.7458 23.86 31.5558 22.945 32.1558 21.835C32.7858 20.725 33.1008 19.555 33.1008 18.325C33.1008 17.095 32.7258 16.48 31.9758 16.48C30.8958 16.48 29.8308 17.425 28.7808 19.315C27.7608 21.205 27.0258 23.35 26.5758 25.75Z\" stroke=\"black\" strokeWidth=\"6\" mask=\"url(#path-1-outside-1)\" />\n                        <path d=\"M64.6813 37.27C62.8513 37.27 61.5013 36.79 60.6313 35.83C59.7913 34.84 59.3713 33.625 59.3713 32.185C59.3713 31.555 59.4463 30.85 59.5963 30.07C59.7463 29.26 59.8963 28.48 60.0463 27.73C60.2263 26.98 60.3463 26.5 60.4063 26.29C60.6463 25.24 60.8713 24.205 61.0813 23.185C61.2913 22.165 61.3963 21.34 61.3963 20.71C61.3963 19.18 60.8563 18.415 59.7763 18.415C58.9963 18.415 58.3063 18.805 57.7063 19.585C57.1063 20.335 56.6263 21.325 56.2663 22.555L53.2063 37H46.7263L50.0113 21.475C50.1013 21.115 50.1463 20.74 50.1463 20.35C50.1463 19.03 49.6963 18.37 48.7963 18.37C47.9563 18.37 47.2213 18.76 46.5913 19.54C45.9913 20.29 45.5113 21.295 45.1513 22.555L42.0913 37H35.6113L40.3813 14.5H46.8613L46.3663 16.84C47.8963 15.13 49.7263 14.275 51.8563 14.275C54.4963 14.275 56.0413 15.565 56.4913 18.145C58.1413 15.595 60.2263 14.32 62.7463 14.32C64.2763 14.32 65.4913 14.74 66.3913 15.58C67.2913 16.42 67.7413 17.695 67.7413 19.405C67.7413 20.275 67.6363 21.25 67.4263 22.33C67.2163 23.38 66.9163 24.67 66.5263 26.2C66.2863 27.13 66.0613 28.045 65.8513 28.945C65.6713 29.815 65.5813 30.505 65.5813 31.015C65.5813 31.615 65.7163 32.08 65.9863 32.41C66.2563 32.74 66.7213 32.905 67.3813 32.905C68.2813 32.905 69.0013 32.59 69.5413 31.96C70.0813 31.3 70.6213 30.295 71.1613 28.945H73.0513C71.9413 32.245 70.6513 34.465 69.1813 35.605C67.7413 36.715 66.2413 37.27 64.6813 37.27Z\" stroke=\"black\" strokeWidth=\"6\" mask=\"url(#path-1-outside-1)\" />\n                        <path d=\"M77.7292 37.18C75.5092 37.18 73.7542 36.61 72.4642 35.47C71.1742 34.33 70.5292 32.53 70.5292 30.07C70.5292 28.03 70.9492 25.765 71.7892 23.275C72.6292 20.785 73.9792 18.64 75.8392 16.84C77.6992 15.01 80.0392 14.095 82.8592 14.095C86.6992 14.095 88.6192 16.495 88.6192 21.295V21.34C88.7092 21.37 88.8742 21.385 89.1142 21.385C90.1042 21.385 91.2442 21.13 92.5342 20.62C93.8242 20.08 94.9942 19.435 96.0442 18.685L96.4492 19.9C95.5792 20.83 94.4392 21.625 93.0292 22.285C91.6492 22.915 90.1342 23.365 88.4842 23.635C88.2442 26.365 87.6292 28.75 86.6392 30.79C85.6492 32.83 84.3742 34.405 82.8142 35.515C81.2542 36.625 79.5592 37.18 77.7292 37.18ZM79.5292 33.13C80.2492 33.13 80.9692 32.725 81.6892 31.915C82.4092 31.075 83.0392 29.95 83.5792 28.54C84.1192 27.1 84.5092 25.51 84.7492 23.77C83.9392 23.59 83.5342 22.96 83.5342 21.88C83.5342 20.65 83.9992 19.84 84.9292 19.45C84.8692 18.46 84.7192 17.785 84.4792 17.425C84.2392 17.035 83.8192 16.84 83.2192 16.84C82.2292 16.84 81.2692 17.56 80.3392 19C79.4092 20.44 78.6592 22.165 78.0892 24.175C77.5192 26.185 77.2342 27.955 77.2342 29.485C77.2342 30.925 77.3992 31.9 77.7292 32.41C78.0592 32.89 78.6592 33.13 79.5292 33.13Z\" stroke=\"black\" strokeWidth=\"6\" mask=\"url(#path-1-outside-1)\" />\n                        <path d=\"M106.415 37.27C104.825 37.27 103.67 36.79 102.95 35.83C102.23 34.87 101.87 33.655 101.87 32.185C101.87 31.555 101.945 30.85 102.095 30.07C102.245 29.26 102.395 28.48 102.545 27.73C102.725 26.98 102.845 26.5 102.905 26.29C103.145 25.24 103.37 24.205 103.58 23.185C103.79 22.165 103.895 21.34 103.895 20.71C103.895 19.18 103.355 18.415 102.275 18.415C101.495 18.415 100.805 18.805 100.205 19.585C99.6046 20.335 99.1246 21.325 98.7646 22.555L95.7046 37H89.2246L93.9946 14.5H100.475L99.9796 16.84C101.48 15.16 103.235 14.32 105.245 14.32C106.775 14.32 107.99 14.74 108.89 15.58C109.79 16.42 110.24 17.695 110.24 19.405C110.24 20.275 110.135 21.25 109.925 22.33C109.715 23.38 109.415 24.67 109.025 26.2C108.785 27.13 108.56 28.045 108.35 28.945C108.17 29.815 108.08 30.505 108.08 31.015C108.08 31.615 108.215 32.08 108.485 32.41C108.755 32.74 109.22 32.905 109.88 32.905C110.6 32.905 111.095 32.815 111.365 32.635C111.185 34.165 110.63 35.32 109.7 36.1C108.8 36.88 107.705 37.27 106.415 37.27Z\" stroke=\"black\" strokeWidth=\"6\" mask=\"url(#path-1-outside-1)\" />\n                        <path d=\"M116.319 37.18C115.329 37.18 114.489 36.835 113.799 36.145C113.109 35.455 112.764 34.615 112.764 33.625C112.764 32.635 113.109 31.795 113.799 31.105C114.489 30.385 115.329 30.025 116.319 30.025C117.309 30.025 118.149 30.385 118.839 31.105C119.559 31.795 119.919 32.635 119.919 33.625C119.919 34.615 119.559 35.455 118.839 36.145C118.149 36.835 117.309 37.18 116.319 37.18Z\" stroke=\"black\" strokeWidth=\"6\" mask=\"url(#path-1-outside-1)\" />\n                        <path d=\"M130.705 12.07C129.715 12.07 128.875 11.725 128.185 11.035C127.495 10.345 127.15 9.50501 127.15 8.51501C127.15 7.52501 127.495 6.68501 128.185 5.99501C128.875 5.27501 129.715 4.91501 130.705 4.91501C131.695 4.91501 132.535 5.27501 133.225 5.99501C133.945 6.68501 134.305 7.52501 134.305 8.51501C134.305 9.50501 133.945 10.345 133.225 11.035C132.535 11.725 131.695 12.07 130.705 12.07ZM127.645 37.27C126.205 37.27 125.035 36.82 124.135 35.92C123.265 35.02 122.83 33.67 122.83 31.87C122.83 31.12 122.95 30.145 123.19 28.945L126.25 14.5H132.73L129.49 29.8C129.37 30.25 129.31 30.73 129.31 31.24C129.31 31.84 129.445 32.275 129.715 32.545C130.015 32.785 130.495 32.905 131.155 32.905C132.025 32.905 132.835 32.545 133.585 31.825C134.335 31.075 134.875 30.115 135.205 28.945H137.095C135.985 32.185 134.56 34.39 132.82 35.56C131.08 36.7 129.355 37.27 127.645 37.27Z\" stroke=\"black\" strokeWidth=\"6\" mask=\"url(#path-1-outside-1)\" />\n                        <path d=\"M140.318 37.27C138.878 37.27 137.663 37 136.673 36.46C135.683 35.89 134.947 35.17 134.467 34.3C133.987 33.4 133.747 32.47 133.747 31.51C133.747 30.52 133.987 29.665 134.467 28.945C134.917 28.195 135.473 27.655 136.133 27.325C137.303 25.225 138.323 23.11 139.193 20.98C140.063 18.82 140.887 16.495 141.667 14.005L148.327 13.105C148.477 16.945 148.732 21.1 149.092 25.57C149.242 27.37 149.318 28.675 149.318 29.485C149.318 30.175 149.257 30.745 149.137 31.195C150.547 30.385 151.628 29.635 152.378 28.945H154.268C152.348 31.165 150.053 33.04 147.383 34.57C146.513 35.5 145.433 36.19 144.143 36.64C142.883 37.06 141.608 37.27 140.318 37.27ZM138.878 33.715C139.988 33.715 140.917 33.385 141.667 32.725C142.417 32.065 142.792 31 142.792 29.53C142.792 28.63 142.703 27.37 142.523 25.75C142.223 22.33 142.028 20.035 141.938 18.865C141.217 21.235 140.002 24.07 138.292 27.37C138.982 27.73 139.327 28.255 139.327 28.945C139.327 29.515 139.132 30.025 138.742 30.475C138.382 30.925 137.918 31.15 137.348 31.15C136.718 31.15 136.313 30.955 136.133 30.565C136.133 31.645 136.342 32.44 136.762 32.95C137.212 33.46 137.918 33.715 138.878 33.715Z\" stroke=\"black\" strokeWidth=\"6\" mask=\"url(#path-1-outside-1)\" />\n                        <path d=\"M156.825 37.27C155.385 37.27 154.215 36.82 153.315 35.92C152.445 35.02 152.01 33.67 152.01 31.87C152.01 31.12 152.13 30.145 152.37 28.945L157.185 6.40001L163.845 5.50001L158.67 29.8C158.55 30.25 158.49 30.73 158.49 31.24C158.49 31.84 158.625 32.275 158.895 32.545C159.195 32.785 159.675 32.905 160.335 32.905C161.205 32.905 162.015 32.545 162.765 31.825C163.515 31.075 164.055 30.115 164.385 28.945H166.275C165.165 32.185 163.74 34.39 162 35.56C160.26 36.7 158.535 37.27 156.825 37.27Z\" stroke=\"black\" strokeWidth=\"6\" mask=\"url(#path-1-outside-1)\" />\n                        <path d=\"M169.767 37.27C168.057 37.27 166.632 36.685 165.492 35.515C164.352 34.345 163.782 32.515 163.782 30.025C163.782 27.805 164.217 25.48 165.087 23.05C165.987 20.59 167.307 18.52 169.047 16.84C170.817 15.13 172.917 14.275 175.347 14.275C176.577 14.275 177.492 14.485 178.092 14.905C178.692 15.325 178.992 15.88 178.992 16.57V16.885L179.487 14.5H185.967L182.727 29.8C182.607 30.25 182.547 30.73 182.547 31.24C182.547 31.84 182.682 32.275 182.952 32.545C183.252 32.785 183.732 32.905 184.392 32.905C184.812 32.905 185.142 32.845 185.382 32.725C184.722 34.405 184.092 35.59 183.492 36.28C182.892 36.94 182.022 37.27 180.882 37.27C179.652 37.27 178.647 36.91 177.867 36.19C177.117 35.44 176.652 34.405 176.472 33.085C174.642 35.875 172.407 37.27 169.767 37.27ZM172.692 32.905C173.442 32.905 174.177 32.56 174.897 31.87C175.647 31.15 176.157 30.175 176.427 28.945L178.587 18.775C178.587 18.385 178.437 18.01 178.137 17.65C177.837 17.26 177.372 17.065 176.742 17.065C175.542 17.065 174.462 17.77 173.502 19.18C172.542 20.56 171.792 22.24 171.252 24.22C170.712 26.17 170.442 27.895 170.442 29.395C170.442 30.895 170.652 31.855 171.072 32.275C171.522 32.695 172.062 32.905 172.692 32.905Z\" stroke=\"black\" strokeWidth=\"6\" mask=\"url(#path-1-outside-1)\" />\n\n                    </svg >\n                </a >\n                <ul className={styles.mainNavlinks} style={{ width: '50%' }}>\n                    {catalogNavItems.map((item, index) => {\n                        return (\n                            <li key={index}>\n                                <NavLink to={item.url} className={styles.catalogItems}>\n                                    {item.title}\n                                </NavLink>\n                            </li>\n                        )\n                    })}\n                </ul>\n                <FormControl className={styles.searchBar}>\n                    <TextField placeholder=\"Search\" variant=\"outlined\" />\n                    <BsSearch style={{ cursor: 'pointer' }} onClick={() => alert('isla in the building')}\n                        style={{ position: 'relative', right: '8%' }} />\n                </FormControl>\n            </nav >\n            <Divider />\n        </div >\n    )\n}\n\nexport default CatalogNavBar;","/home/isla/Documents/VSCode/ReactJS/lemon/src/components/HomePage/navBarItems.js",[],["93","94"],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":16,"column":18,"nodeType":"101","endLine":16,"endColumn":36},{"ruleId":"99","severity":1,"message":"100","line":27,"column":17,"nodeType":"101","endLine":27,"endColumn":37},{"ruleId":"102","severity":1,"message":"103","line":46,"column":21,"nodeType":"101","endLine":46,"endColumn":78},{"ruleId":"102","severity":1,"message":"103","line":47,"column":21,"nodeType":"101","endLine":47,"endColumn":76},{"ruleId":"102","severity":1,"message":"103","line":48,"column":21,"nodeType":"101","endLine":48,"endColumn":77},{"ruleId":"104","severity":1,"message":"105","line":3,"column":17,"nodeType":"106","messageId":"107","endLine":3,"endColumn":21},{"ruleId":"104","severity":1,"message":"108","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":14},{"ruleId":"104","severity":1,"message":"109","line":17,"column":15,"nodeType":"106","messageId":"107","endLine":17,"endColumn":20},{"ruleId":"110","severity":1,"message":"111","line":35,"column":17,"nodeType":"112","messageId":"113","endLine":35,"endColumn":33,"fix":"114"},{"ruleId":"104","severity":1,"message":"105","line":3,"column":17,"nodeType":"106","messageId":"107","endLine":3,"endColumn":21},{"ruleId":"104","severity":1,"message":"108","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":14},{"ruleId":"104","severity":1,"message":"115","line":17,"column":11,"nodeType":"106","messageId":"107","endLine":17,"endColumn":23},{"ruleId":"104","severity":1,"message":"109","line":19,"column":15,"nodeType":"106","messageId":"107","endLine":19,"endColumn":20},{"ruleId":"104","severity":1,"message":"116","line":23,"column":11,"nodeType":"106","messageId":"107","endLine":23,"endColumn":23},{"ruleId":"110","severity":1,"message":"111","line":37,"column":17,"nodeType":"112","messageId":"113","endLine":37,"endColumn":33,"fix":"117"},{"ruleId":"102","severity":1,"message":"103","line":16,"column":29,"nodeType":"101","endLine":16,"endColumn":32},{"ruleId":"102","severity":1,"message":"103","line":17,"column":29,"nodeType":"101","endLine":17,"endColumn":32},{"ruleId":"102","severity":1,"message":"103","line":26,"column":56,"nodeType":"101","endLine":26,"endColumn":59},{"ruleId":"102","severity":1,"message":"103","line":52,"column":56,"nodeType":"101","endLine":52,"endColumn":59},{"ruleId":"102","severity":1,"message":"118","line":61,"column":56,"nodeType":"101","endLine":61,"endColumn":68},{"ruleId":"102","severity":1,"message":"118","line":62,"column":56,"nodeType":"101","endLine":62,"endColumn":68},{"ruleId":"102","severity":1,"message":"118","line":63,"column":56,"nodeType":"101","endLine":63,"endColumn":68},{"ruleId":"102","severity":1,"message":"118","line":64,"column":56,"nodeType":"101","endLine":64,"endColumn":68},{"ruleId":"104","severity":1,"message":"119","line":9,"column":40,"nodeType":"106","messageId":"107","endLine":9,"endColumn":50},{"ruleId":"104","severity":1,"message":"120","line":14,"column":8,"nodeType":"106","messageId":"107","endLine":14,"endColumn":13},{"ruleId":"99","severity":1,"message":"100","line":72,"column":29,"nodeType":"101","endLine":72,"endColumn":52},{"ruleId":"99","severity":1,"message":"100","line":106,"column":41,"nodeType":"101","endLine":106,"endColumn":59},{"ruleId":"99","severity":1,"message":"100","line":110,"column":41,"nodeType":"101","endLine":110,"endColumn":62},{"ruleId":"99","severity":1,"message":"100","line":114,"column":41,"nodeType":"101","endLine":114,"endColumn":60},{"ruleId":"99","severity":1,"message":"100","line":124,"column":41,"nodeType":"101","endLine":124,"endColumn":60},{"ruleId":"99","severity":1,"message":"100","line":128,"column":41,"nodeType":"101","endLine":128,"endColumn":62},{"ruleId":"99","severity":1,"message":"100","line":132,"column":41,"nodeType":"101","endLine":132,"endColumn":60},{"ruleId":"99","severity":1,"message":"100","line":151,"column":29,"nodeType":"101","endLine":151,"endColumn":56},{"ruleId":"99","severity":1,"message":"100","line":162,"column":29,"nodeType":"101","endLine":162,"endColumn":56},{"ruleId":"99","severity":1,"message":"100","line":173,"column":29,"nodeType":"101","endLine":173,"endColumn":56},{"ruleId":"104","severity":1,"message":"121","line":15,"column":13,"nodeType":"106","messageId":"107","endLine":15,"endColumn":20},{"ruleId":"104","severity":1,"message":"122","line":15,"column":22,"nodeType":"106","messageId":"107","endLine":15,"endColumn":32},{"ruleId":"123","severity":1,"message":"124","line":76,"column":25,"nodeType":"125","endLine":76,"endColumn":70},{"ruleId":"95","replacedBy":"126"},{"ruleId":"97","replacedBy":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'valid' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['error'] found.","Property","unnecessarilyComputedProperty",{"range":"130","text":"131"},"'handleSignin' is assigned a value but never used.","'handleChange' is assigned a value but never used.",{"range":"132","text":"131"},"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'GrWifiNone' is defined but never used.","'card1' is defined but never used.","'clicked' is assigned a value but never used.","'setClicked' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["128"],["129"],"no-global-assign","no-unsafe-negation",[873,882],"'error'",[917,926]]